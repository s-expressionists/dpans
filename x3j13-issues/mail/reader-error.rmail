BABYL OPTIONS:
Version: 5
Labels:
Note:   This is the header of an rmail file.
Note:   If you are seeing it in rmail,
Note:    it means the file has no messages in it.

1,,
Summary-line: 23-Oct           barmar@Think.COM  #issue READER-ERROR
Received: from Xerox.COM by pooh.parc.xerox.com with SMTP
	(5.61+/IDA-1.2.8/gandalf) id AA08626; Mon, 23 Oct 89 23:21:49 PDT
Received: from Cabernet.ms by ArpaGateway.ms ; 23 OCT 89 23:20:38 PDT
Return-Path: <X3J13-mailer@SAIL.Stanford.EDU>
Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 23 OCT 89
 18:29:30 PDT
Received: from Think.COM (Gateway.Think.COM) by SAIL.Stanford.EDU with TCP;
 23 Oct 89  18:24:10 PDT
Return-Path: <barmar@Think.COM>
Received: from Occam.Think.COM by Think.COM; Mon, 23 Oct 89 21:25:50 -0400
Date: Mon, 23 Oct 89 21:21 EDT
From: Barry Margolin <barmar@Think.COM>
Subject: issue READER-ERROR
To: Sandra J Loosemore <sandra%defun@cs.utah.edu>
Cc: x3j13@sail.stanford.edu
In-Reply-To: <8910232230.AA07983@defun.utah.edu>
Message-Id: <19891024012100.1.BARMAR@OCCAM.THINK.COM>

*** EOOH ***
Date: Mon, 23 Oct 89 21:21 EDT
From: Barry Margolin <barmar@Think.COM>
Subject: issue READER-ERROR
To: Sandra J Loosemore <sandra%defun@cs.utah.edu>
Cc: x3j13@sail.stanford.edu
In-Reply-To: <8910232230.AA07983@defun.utah.edu>

    Date: Mon, 23 Oct 89 16:30:15 MDT
    From: sandra%defun@cs.utah.edu (Sandra J Loosemore)

    Forum:		Cleanup
    Issue:		READER-ERROR
    References:	Chapter 3, "Syntax"
		    Section 2.2, "Types"
    Category:	ADDITION, CHANGE
    Edit History:   V1, 23 Oct 1989, Sandra Loosemore

    Proposal (READER-ERROR:NEW-TYPE):

    Add a new type specifier, READER-ERROR.  This is a subtype of the
    types ERROR, SERIOUS-CONDITION, CONDITION, and T.  The type
    READER-ERROR consists of serious conditions that relate to lexical
    analysis (the building and interpretation of tokens) and parsing
    (errors in reader macro syntax) by the Lisp reader.

I like this.  I'd also like to suggest a slot, STREAM, which would hold
the stream the error occurred on.  It would be nice if there were some
generic way to include more of the context, but I'm not sure how.

                                                barmar



1,,
Summary-line: 23-Oct   sandra%defun@cs.utah.edu  #issue READER-ERROR
Received: from Xerox.COM by pooh.parc.xerox.com with SMTP
	(5.61+/IDA-1.2.8/gandalf) id AA08395; Mon, 23 Oct 89 22:14:16 PDT
Received: from Cabernet.ms by ArpaGateway.ms ; 23 OCT 89 22:13:41 PDT
Return-Path: <X3J13-mailer@SAIL.Stanford.EDU>
Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 23 OCT 89
 15:38:15 PDT
Received: from cs.utah.edu by SAIL.Stanford.EDU with TCP; 23 Oct 89
 15:30:31 PDT
Received: from defun.utah.edu by cs.utah.edu (5.61/utah-2.4-cs)
 	id AA05438; Mon, 23 Oct 89 16:30:19 -0600
Received: by defun.utah.edu (5.61/utah-2.3-leaf)
 	id AA07983; Mon, 23 Oct 89 16:30:16 -0600
From: sandra%defun@cs.utah.edu (Sandra J Loosemore)
Message-Id: <8910232230.AA07983@defun.utah.edu>
Date: Mon, 23 Oct 89 16:30:15 MDT
Subject: issue READER-ERROR
To: x3j13@sail.stanford.edu

*** EOOH ***
From: sandra%defun@cs.utah.edu (Sandra J Loosemore)
Date: Mon, 23 Oct 89 16:30:15 MDT
Subject: issue READER-ERROR
To: x3j13@sail.stanford.edu

This is issue #18 from my list.

Forum:		Cleanup
Issue:		READER-ERROR
References:	Chapter 3, "Syntax"
		Section 2.2, "Types"
Category:	ADDITION, CHANGE
Edit History:   V1, 23 Oct 1989, Sandra Loosemore



Problem Description:

Chapter 3 of the current draft is not consistent about the types of
errors that must be signalled by the reader.  In most places where it
specifies that an error is to be signalled, it does not indicate a
particular type of error, but in at least one situation it requires
the error to be of type PROGRAM-ERROR, and in other cases it requires
the error to be of type ERROR.

None of the ERROR subtypes described in section 2.2 really seem
appropriate for syntactic errors detected by the reader.  In
particular, the description of PROGRAM-ERROR implies that its purpose
is for errors relating to program syntax which are detectable during
evaluation or compilation rather than read-time errors.  It seems
especially inappropriate to use PROGRAM-ERROR for this purpose since
the reader can be used to read things other than programs.  Likewise,
STREAM-ERROR appears to have been intended to be used for errors
relating to character-level transactions on the stream rather than
lexical analysis or parsing.


Proposal (READER-ERROR:NEW-TYPE):

Add a new type specifier, READER-ERROR.  This is a subtype of the
types ERROR, SERIOUS-CONDITION, CONDITION, and T.  The type
READER-ERROR consists of serious conditions that relate to lexical
analysis (the building and interpretation of tokens) and parsing
(errors in reader macro syntax) by the Lisp reader.

Change the discussion in chapter 3 to specify that the type of errors
signalled by the reader is READER-ERROR.  There are numerous places
that would be affected.


Rationale:

The general policy that has been followed in other areas of the
language where errors must, should, or might be signalled is to
specify a particular subtype of ERROR which covers that class of
errors.  Doing the same for reader errors would be consistent with the
overall policy, but none of the existing error types seem appropriate
for reader-related errors.


Current Practice:

Probably no implementation does this yet.


Cost to implementors:

Trivial.


Cost to users:

Probably no user programs rely on the reader signalling any particular
type of error yet.


Benefits:

Increased consistency in the language design.
Ability to set up handlers specifically for reader errors.


Discussion:
-------



1,,
Summary-line:  2-Nov   sandra%defun@cs.utah.edu  #issue READER-ERROR, version 2
Received: from Xerox.COM by pooh.parc.xerox.com with SMTP
	(5.61+/IDA-1.2.8/gandalf) id AA28488; Thu, 2 Nov 89 10:21:28 PST
Received: from Chardonnay.ms by ArpaGateway.ms ; 02 NOV 89 10:20:26 PST
Return-Path: <X3J13-mailer@SAIL.Stanford.EDU>
Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 02 NOV 89
 10:18:56 PST
Received: from cs.utah.edu by SAIL.Stanford.EDU with TCP; 2 Nov 89
 10:11:36 PST
Received: from defun.utah.edu by cs.utah.edu (5.61/utah-2.4-cs)
 	id AA15636; Thu, 2 Nov 89 09:21:55 -0700
Received: by defun.utah.edu (5.61/utah-2.3-leaf)
 	id AA17314; Thu, 2 Nov 89 09:21:53 -0700
From: sandra%defun@cs.utah.edu (Sandra J Loosemore)
Message-Id: <8911021621.AA17314@defun.utah.edu>
Date: Thu, 2 Nov 89 09:21:51 MST
Subject: issue READER-ERROR, version 2
To: x3j13@sail.stanford.edu

*** EOOH ***
From: sandra%defun@cs.utah.edu (Sandra J Loosemore)
Date: Thu, 2 Nov 89 09:21:51 MST
Subject: issue READER-ERROR, version 2
To: x3j13@sail.stanford.edu

Forum:		Cleanup
Issue:		READER-ERROR
References:	Chapter 3, "Syntax"
		Section 2.2, "Types"
Category:	ADDITION, CHANGE
Edit History:   V1, 23 Oct 1989, Sandra Loosemore
		V2, 02 Nov 1989, Sandra Loosemore
			(change supertypes, update discussion)



Problem Description:

Chapter 3 of the current draft is not consistent about the types of
errors that must be signalled by the reader.  In most places where it
specifies that an error is to be signalled, it does not indicate a
particular type of error, but in at least one situation it requires
the error to be of type PROGRAM-ERROR, and in other cases it requires
the error to be of type ERROR.

None of the ERROR subtypes described in section 2.2 really seem
appropriate for syntactic errors detected by the reader.  In
particular, the description of PROGRAM-ERROR implies that its purpose
is for errors relating to program syntax which are detectable during
evaluation or compilation rather than read-time errors.  It seems
especially inappropriate to use PROGRAM-ERROR for this purpose since
the reader can be used to read things other than programs.  Likewise,
STREAM-ERROR appears to have been intended to be used for errors
relating to character-level transactions on the stream rather than
lexical analysis or parsing.


Proposal (READER-ERROR:NEW-TYPE):

Add a new type specifier, READER-ERROR.  This is a subtype of the
types STREAM-ERROR, ERROR, SERIOUS-CONDITION, CONDITION, and T.  The
type READER-ERROR consists of serious conditions that relate to
lexical analysis (the building and interpretation of tokens) and
parsing (errors in reader macro syntax) by the Lisp reader.

Since READER-ERROR is a subtype of STREAM-ERROR, objects of this type
inherit a STREAM slot, which can be accessed using the function
STREAM-ERROR-STREAM.

Change the discussion in chapter 3 to specify that the type of errors
signalled by the reader is READER-ERROR.  There are numerous places
that would be affected.


Rationale:

The general policy that has been followed in other areas of the
language where errors must, should, or might be signalled is to
specify a particular subtype of ERROR which covers that class of
errors.  Doing the same for reader errors would be consistent with the
overall policy, but none of the existing error types seem appropriate
for reader-related errors.


Current Practice:

LispWorks (from Harlequin) reportedly already uses such a condition.


Cost to implementors:

Trivial.


Cost to users:

Probably no user programs rely on the reader signalling any particular
type of error yet.


Benefits:

Increased consistency in the language design.
Ability to set up handlers specifically for reader errors.


Discussion:

Pitman says:
  Our later comments will show that i would like this condition to be
  called PARSE-ERROR so that it doesn't seem to be useful only for 
  READ-related problems but can in fact be used for other parser-style
  applications (e.g., a FORTRAN parser, a user-written English-language
  interface, etc.).

The initial version of this proposal specified that READER-ERROR was
disjoint from (rather than a subtype of) STREAM-ERROR.  This was
changed because there was a suggestion that some conditions should be
both a READER-ERROR and a STREAM-ERROR.  Making it a subtype also allows
it to inherit the STREAM slot and the STREAM-ERROR-STREAM accessor.
-------



1,,
Summary-line: 10-Jul  Moon@STONY-BROOK.SCRC.Sym  #Issue: READER-ERROR (Version 3)
Received: from Xerox.COM by pooh.parc.xerox.com with SMTP
	(5.61+/IDA-1.2.8/gandalf) id AA04336; Tue, 10 Jul 90 19:51:41 PDT
Received: from Cabernet.ms by ArpaGateway.ms ; 10 JUL 90 19:47:40 PDT
Return-Path: <@MCC.COM:Moon@STONY-BROOK.SCRC.Symbolics.COM>
Received: from MCC.COM ([128.62.11.10]) by Xerox.COM ; 10 JUL 90 19:47:23
 PDT
Received: from STONY-BROOK.SCRC.Symbolics.COM by MCC.COM with TCP/SMTP; Tue
 10 Jul 90 21:18:31-CDT
Received: from KENNETH-WILLIAMS.SCRC.Symbolics.COM by
 STONY-BROOK.SCRC.Symbolics.COM via INTERNET with SMTP id 818754; 10 Jul 90
 22:18:15 EDT
Date: Tue, 10 Jul 90 22:21 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Issue: READER-ERROR (Version 3)
To: X3J13@mcc.com
Message-Id: <19900711022114.8.MOON@KENNETH-WILLIAMS.SCRC.Symbolics.COM>

*** EOOH ***
Date: Tue, 10 Jul 90 22:21 EDT
From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>
Subject: Issue: READER-ERROR (Version 3)
To: X3J13@mcc.com

This passed unanimously at the November meeting, after being
amended to rename READER-ERROR to PARSE-ERROR.

Forum:		Cleanup
Issue:		READER-ERROR
References:	Chapter 3, "Syntax"
		Section 2.2, "Types"
Category:	ADDITION, CHANGE
Edit History:   V1, 23 Oct 1989, Sandra Loosemore
		V2, 02 Nov 1989, Sandra Loosemore
			(change supertypes, update discussion)
                V3, 10 Jul 1990, David Moon (include amendment from meeting)


Problem Description:

Chapter 3 of the current draft is not consistent about the types of
errors that must be signalled by the reader.  In most places where it
specifies that an error is to be signalled, it does not indicate a
particular type of error, but in at least one situation it requires
the error to be of type PROGRAM-ERROR, and in other cases it requires
the error to be of type ERROR.

None of the ERROR subtypes described in section 2.2 really seem
appropriate for syntactic errors detected by the reader.  In
particular, the description of PROGRAM-ERROR implies that its purpose
is for errors relating to program syntax which are detectable during
evaluation or compilation rather than read-time errors.  It seems
especially inappropriate to use PROGRAM-ERROR for this purpose since
the reader can be used to read things other than programs.  Likewise,
STREAM-ERROR appears to have been intended to be used for errors
relating to character-level transactions on the stream rather than
lexical analysis or parsing.


Proposal (READER-ERROR:NEW-TYPE):

Add a new type specifier, PARSE-ERROR.  This is a subtype of the
types STREAM-ERROR, ERROR, SERIOUS-CONDITION, CONDITION, and T.  The
type PARSE-ERROR consists of serious conditions that relate to
lexical analysis (the building and interpretation of tokens) and
parsing (errors in reader macro syntax) by the Lisp reader.

Since PARSE-ERROR is a subtype of STREAM-ERROR, objects of this type
inherit a STREAM slot, which can be accessed using the function
STREAM-ERROR-STREAM.

Change the discussion in chapter 3 to specify that the type of errors
signalled by the reader is PARSE-ERROR.  There are numerous places
that would be affected.


Rationale:

The general policy that has been followed in other areas of the
language where errors must, should, or might be signalled is to
specify a particular subtype of ERROR which covers that class of
errors.  Doing the same for reader errors would be consistent with the
overall policy, but none of the existing error types seem appropriate
for reader-related errors.


Current Practice:

LispWorks (from Harlequin) reportedly already uses such a condition.


Cost to implementors:

Trivial.


Cost to users:

Probably no user programs rely on the reader signalling any particular
type of error yet.


Benefits:

Increased consistency in the language design.
Ability to set up handlers specifically for reader errors.


Discussion:

Pitman says:
  Our later comments will show that i would like this condition to be
  called PARSE-ERROR so that it doesn't seem to be useful only for 
  READ-related problems but can in fact be used for other parser-style
  applications (e.g., a FORTRAN parser, a user-written English-language
  interface, etc.).

The initial version of this proposal specified that PARSE-ERROR was
disjoint from (rather than a subtype of) STREAM-ERROR.  This was
changed because there was a suggestion that some conditions should be
both a PARSE-ERROR and a STREAM-ERROR.  Making it a subtype also allows
it to inherit the STREAM slot and the STREAM-ERROR-STREAM accessor.

Prior to version 3 the condition PARSE-ERROR was named READER-ERROR.

