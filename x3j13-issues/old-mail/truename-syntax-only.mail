*start*03292 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([10.0.0.11]) by Xerox.COM ; 12 SEP 88 18:14:50 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 12 Sep 88  18:14:40 PDTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 458019; Mon 12-Sep-88 21:13:23 EDTDate: Mon, 12 Sep 88 21:12 EDTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: issue TRUENAME-SYNTAX-ONLYTo: Sandra J Loosemore <sandra%defun@cs.utah.edu>cc: cl-cleanup@SAIL.STANFORD.EDUIn-Reply-To: <8809122123.AA18137@defun.utah.edu>Message-ID: <19880913011221.0.MOON@EUPHRATES.SCRC.Symbolics.COM>    Date: Mon, 12 Sep 88 15:23:28 MDT    From: sandra%defun@cs.utah.edu (Sandra J Loosemore)TRUENAME-SYNTAX-ONLY:ADD seems generally reasonable, however I have afew comments to offer.  I think the proposal needs to be amended a bit.    TRUENAME [with the :SYNTAX-ONLY option] applies any    file-name translations performed by the file system and returns the    "true name" of the specified file as a pathname.Should it be left this vague, and specifically defined to beimplementation-dependent, or should some axioms that it must satisfy belisted?  For example, should TRUENAME with and without the :SYNTAX-ONLYoption be required to return the same answer in the case when the latterdoes not signal an error?  I suspect it may have to be vague (see below).    (3) Clarify that coercion of a stream to a pathname (either implicitly    or by a call to the function PATHNAME) returns a pathname representing    the "true name" of the file.This directly contradicts the example at the top of CLtL p.414.  I thinkyou should just remove this point.    (4) Clarify that file-name translation on pathnames is not performed    under any other circumstances except those listed above.I can't figure out what this means operationally, but I suspect that ifI could figure it out, I would disagree with it.  I suggest removing thispoint, unless you had something specific in mind, in which case I suggestrewording this point.What does (TRUENAME <stream> :SYNTAX-ONLY T) mean?    Cost to implementors:    Minor.  VMS provides an RMS system call ....This overlooks the case of implementations that access VMS files via anetwork file protocol.  The cost to implementors might be near infinite ifthe particular network file protocol they are using does not provide anyway to perform this operation.  This suggests that the definition of the:SYNTAX-ONLY option to TRUENAME should be left sufficiently vague thatan implementation that always returned its first argument would be valid.A lot of the Common Lisp file system interface has to be like that.    However, it    would also be reasonable to restrict checking for syntax errors to the    same places that file name translation is applied.It would be at least as reasonable to argue that checking for syntaxerrors is properly done during file name parsing (i.e. conversion from astring to a pathname object), as with all other Common Lisp syntax.Perhaps it would be better not to raise that issue in this proposal.*start*04876 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([10.0.0.11]) by Xerox.COM ; 12 SEP 88 14:25:18 PDTReceived: from cs.utah.edu by SAIL.Stanford.EDU with TCP; 12 Sep 88  14:24:43 PDTReceived: by cs.utah.edu (5.54/utah-2.0-cs)	id AA12089; Mon, 12 Sep 88 15:23:32 MDTReceived: by defun.utah.edu (5.54/utah-2.0-leaf)	id AA18137; Mon, 12 Sep 88 15:23:29 MDTFrom: sandra%defun@cs.utah.edu (Sandra J Loosemore)Message-Id: <8809122123.AA18137@defun.utah.edu>Date: Mon, 12 Sep 88 15:23:28 MDTSubject: issue TRUENAME-SYNTAX-ONLYTo: cl-cleanup@sail.stanford.eduHere, at Moon's suggestion, is a formal proposal on something Ibrought up earlier in connection with issue PATHNAME-SYNTAX-ERROR-TIME.  It is a separate issue since it can stand on its own regardless of which(if any) of the proposals for PATHNAME-SYNTAX-ERROR-TIME is adopted, butwith a slight modification it could also supplant thos proposals and "fix" the same problem.-SandraIssue:		TRUENAME-SYNTAX-ONLYReferences:	CLtL p. 413-414		Issue PATHNAME-SYNTAX-ERROR-TIMECategory:	ENHANCEMENT, CLARIFICATIONEdit History:   V1, Sandra Loosemore, 12 Sep 1988Problem Description:Filename syntax under VMS does not provide a syntactic distinctionbetween device names and logical names which may include otherpathname components.  This causes particular problems when a pathnameincluding a logical name is passed to MERGE-PATHNAMES, since theimplementation may or may not expand the logical name to find the"hidden" pathname components it includes.  Although the functionTRUENAME performs file-name translation, as currently defined it canonly be used for this purpose if the pathname is a complete filespecification for an existing file, since it will signal an errorotherwise.Other operating systems may have similar problems.  For example, someLisps which run under Unix (notably PSL) use shell variables orenvironment variables to serve the same purpose as logical names underVMS.Proposal TRUENAME-SYNTAX-ONLY:ADD:(1) Add a keyword argument :SYNTAX-ONLY to the function TRUENAME.  Ifthis argument is NIL or not supplied, an error is signalled if anappropriate file cannot be located within the file systm for the givenpathname.  Otherwise, TRUENAME signals an error only if the pathnamehas illegal syntax for its specified host; it may not signal an errorif the file does not exist, if the pathname is not a complete filespecification, or if an attempt to create the file would fail for someother reason (such as a nonexistent directory).  TRUENAME applies anyfile-name translations performed by the file system and returns the"true name" of the specified file as a pathname.(2) Clarify that functions OPEN, RENAME-FILE, DELETE-FILE, PROBE-FILE,FILE-WRITE-DATE, FILE-AUTHOR, LOAD, and DIRECTORY perform the samesyntax-checking and file-name translation on their arguments asTRUENAME.(3) Clarify that coercion of a stream to a pathname (either implicitlyor by a call to the function PATHNAME) returns a pathname representingthe "true name" of the file.  However, neither implicit nor explicitcoercion of strings to pathnames causes file-name translation to beperformed.(4) Clarify that file-name translation on pathnames is not performedunder any other circumstances except those listed above.Rationale:This proposal gives the user explicit control over when logical namesare expanded.  Other alternatives would be to require translation tobe performed automatically at pathname coercion time or withinMERGE-PATHNAMES.  Both of these alternatives are unsatisfactorybecause correct translation of the logical name depends on the hostand may not be performed correctly on a partial pathname.Current Practice:Vax Lisp under VMS expands logical names by default.  (InMERGE-PATHNAMES?  I no longer have access to this implementation.)Lucid Common Lisp does not, and provides no mechanism for expandinglogical names.Cost to implementors:Minor.  VMS provides an RMS system call to perform the necessarytranslation and syntax checking; this is also performed by default bythe system call which opens a file.  Implementations running underfile systems which do not support any concept of logical names needonly perform a syntax check on the pathname within TRUENAME.Cost to users:None.  This is a compatible change.Benefits:A portable mechanism for dealing with logical names is provided.Discussion:This proposal leaves open the possibility that syntax errors inpathnames might also be detected at other times, such as at pathnamecoercion time (see issue PATHNAME-SYNTAX-ERROR-TIME).  However, itwould also be reasonable to restrict checking for syntax errors to thesame places that file name translation is applied.-------*start*05123 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([10.0.0.11]) by Xerox.COM ; 13 SEP 88 09:17:47 PDTReceived: from cs.utah.edu by SAIL.Stanford.EDU with TCP; 13 Sep 88  09:16:24 PDTReceived: by cs.utah.edu (5.54/utah-2.0-cs)	id AA01115; Tue, 13 Sep 88 10:14:56 MDTReceived: by defun.utah.edu (5.54/utah-2.0-leaf)	id AA18524; Tue, 13 Sep 88 10:14:48 MDTFrom: sandra%defun@cs.utah.edu (Sandra J Loosemore)Message-Id: <8809131614.AA18524@defun.utah.edu>Date: Tue, 13 Sep 88 10:14:47 MDTSubject: Re: issue TRUENAME-SYNTAX-ONLYTo: David A. Moon <Moon@stony-brook.scrc.symbolics.com>Cc: Sandra J Loosemore <sandra%defun@cs.utah.edu>, cl-cleanup@sail.stanford.eduIn-Reply-To: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>, Mon, 12 Sep 88 21:12 EDT> Date: Mon, 12 Sep 88 21:12 EDT> From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>> >     TRUENAME [with the :SYNTAX-ONLY option] applies any>     file-name translations performed by the file system and returns the>     "true name" of the specified file as a pathname.> > Should it be left this vague, and specifically defined to be> implementation-dependent, or should some axioms that it must satisfy be> listed?  For example, should TRUENAME with and without the :SYNTAX-ONLY> option be required to return the same answer in the case when the latter> does not signal an error?  I suspect it may have to be vague (see below).The language in CLtL is already vague, but as far as I know nobody hasbeen complaining about it.  At least for VMS, I'd say that TRUENAMEshouldn't have to return the same answer in both cases; the reason isthat if you don't supply an explicit version number in the inputpathname and you tell TRUENAME to match an existing file, it ought tofill in the version number for that file; but if you're only checkingsyntax it doesn't have any way of knowing what the version numbershould be.>     (3) Clarify that coercion of a stream to a pathname (either implicitly>     or by a call to the function PATHNAME) returns a pathname representing>     the "true name" of the file.> > This directly contradicts the example at the top of CLtL p.414.  I think> you should just remove this point.Sorry, "clarify" was the wrong word here.  Except for the example youcite, CLtL doesn't explicitly address the issue of what coercing astream to a pathname really does.  The idea is, that since OPEN mustperform the equivalent of TRUENAME anyway, it can just as well createa stream that remembers the "true name" of the file as the pathnamethat was passed to OPEN.  As I recall, VaxLisp already behaves asproposed.  However, if people would prefer it that way, I could changethis item to leave this behavior explicitly vague.>     (4) Clarify that file-name translation on pathnames is not performed>     under any other circumstances except those listed above.> > I can't figure out what this means operationally, but I suspect that if> I could figure it out, I would disagree with it.  I suggest removing this> point, unless you had something specific in mind, in which case I suggest> rewording this point.What I had in mind was that none of the zillion other pathnamefunctions (which I was too lazy to list) would be allowed to do filename translation; nor would coercing a string to a pathname.  Forexample, (pathname-device "foo:bar.baz") on VMS would always return"foo", even if it's defined as a logical name.>     Cost to implementors:> >     Minor.  VMS provides an RMS system call ....> > This overlooks the case of implementations that access VMS files via a> network file protocol.  The cost to implementors might be near infinite if> the particular network file protocol they are using does not provide any> way to perform this operation.  This suggests that the definition of the> :SYNTAX-ONLY option to TRUENAME should be left sufficiently vague that> an implementation that always returned its first argument would be valid.> A lot of the Common Lisp file system interface has to be like that.That's a good point -- I'd forgotten about networking from non-VMShosts.  However, if an implementation doesn't expand logical namesfully when requested to do so, users are going to run into the samekind of strange behavior (i.e., within MERGE-PATHNAMES) that promptedme to bring this up in the first place.  I don't see much point inadding this functionality to the language unless the spec is tightenough to ensure that it's going to solve the problem it was intendedto.> It would be at least as reasonable to argue that checking for syntax> errors is properly done during file name parsing (i.e. conversion from a> string to a pathname object), as with all other Common Lisp syntax.Yes, of course.  However, it's possible to construct pathnames whichmight contain "syntax errors" by other means as well.  For instance, ifyou merge pathnames from two different hosts you might end up withsubfields that are too long, illegal characters, etc.-Sandra-------*start*07512 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([10.0.0.11]) by Xerox.COM ; 14 SEP 88 13:27:38 PDTReceived: from ALLEGHENY.SCRC.Symbolics.COM ([128.81.41.45]) by SAIL.Stanford.EDU with TCP; 14 Sep 88  13:22:24 PDTReceived: from EUPHRATES.SCRC.Symbolics.COM by ALLEGHENY.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 106654; Wed 14-Sep-88 15:54:21 EDTDate: Wed, 14 Sep 88 15:54 EDTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Re: issue TRUENAME-SYNTAX-ONLYTo: Sandra J Loosemore <sandra%defun@cs.utah.edu>cc: cl-cleanup@sail.stanford.eduIn-Reply-To: <8809131614.AA18524@defun.utah.edu>Supersedes: <19880914193105.9.MOON@EUPHRATES.SCRC.Symbolics.COM>Comments: More information, after delving into KMP's electronic basement on my hands and kneesMessage-ID: <19880914195416.2.MOON@EUPHRATES.SCRC.Symbolics.COM>    Date: Tue, 13 Sep 88 10:14:47 MDT    From: sandra%defun@cs.utah.edu (Sandra J Loosemore)    > Date: Mon, 12 Sep 88 21:12 EDT    > From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>    >     >     TRUENAME [with the :SYNTAX-ONLY option] applies any    >     file-name translations performed by the file system and returns the    >     "true name" of the specified file as a pathname.    >     > Should it be left this vague, and specifically defined to be    > implementation-dependent, or should some axioms that it must satisfy be    > listed?  For example, should TRUENAME with and without the :SYNTAX-ONLY    > option be required to return the same answer in the case when the latter    > does not signal an error?  I suspect it may have to be vague (see below).    The language in CLtL is already vague, but as far as I know nobody has    been complaining about it.  At least for VMS, I'd say that TRUENAME    shouldn't have to return the same answer in both cases; the reason is    that if you don't supply an explicit version number in the input    pathname and you tell TRUENAME to match an existing file, it ought to    fill in the version number for that file; but if you're only checking    syntax it doesn't have any way of knowing what the version number    should be.I see.  Okay, let's not try axioms.  Now that I read it again, yourdescription of :SYNTAX-ONLY can't be right, though.  It refers to"the specified file" but you aren't specifying any particular file.Perhaps this can only be defined in terms of a VAX/VMS example.Or perhaps it can be defined by saying that where file name componentsare missing or wild or :NEWEST or :OLDEST, the :SYNTAX-ONLY optiontells you what's common to the truenames of all possible files withall possible values for those components, whereas without :SYNTAX-ONLYyou specify a single specific file (after merging with a default)and get just the truename of that exact file.  In fact what I justsaid won't work in file systems with links, nor in those with complexpattern-matching translation mechanisms (ITS has both, for example).Perhaps you can come up with a better description of what :SYNTAX-ONLYdoes?  I appear to have struck out.    >     (3) Clarify that coercion of a stream to a pathname (either implicitly    >     or by a call to the function PATHNAME) returns a pathname representing    >     the "true name" of the file.    >     > This directly contradicts the example at the top of CLtL p.414.  I think    > you should just remove this point.    Sorry, "clarify" was the wrong word here.  Except for the example you    cite, CLtL doesn't explicitly address the issue of what coercing a    stream to a pathname really does.  The idea is, that since OPEN must    perform the equivalent of TRUENAME anyway, it can just as well create    a stream that remembers the "true name" of the file as the pathname    that was passed to OPEN.  As I recall, VaxLisp already behaves as    proposed.  However, if people would prefer it that way, I could change    this item to leave this behavior explicitly vague.You're proposing that TRUENAME of a stream and PATHNAME of a stream behaveidentically.  I think CLtL means for PATHNAME of a stream to return theargument that was given to OPEN (after merging with the default).  I'm alittle surprised the Cleanup group haven't addressed this already.LATER: Ah, I see they have.  Already-accepted issue PATHNAME-STREAMclarified this, in a way consistent with what I said just above.    >     (4) Clarify that file-name translation on pathnames is not performed    >     under any other circumstances except those listed above.    >     > I can't figure out what this means operationally, but I suspect that if    > I could figure it out, I would disagree with it.  I suggest removing this    > point, unless you had something specific in mind, in which case I suggest    > rewording this point.    What I had in mind was that none of the zillion other pathname    functions (which I was too lazy to list) would be allowed to do file    name translation; nor would coercing a string to a pathname.  For    example, (pathname-device "foo:bar.baz") on VMS would always return    "foo", even if it's defined as a logical name.I agree with that, but I think it can only be said explicitly, not byimplication from "any other circumstances."  For example, does "any othercircumstances" include all implementation extensions and all user-written code?    >     Cost to implementors:    >     >     Minor.  VMS provides an RMS system call ....    >     > This overlooks the case of implementations that access VMS files via a    > network file protocol.  The cost to implementors might be near infinite if    > the particular network file protocol they are using does not provide any    > way to perform this operation.  This suggests that the definition of the    > :SYNTAX-ONLY option to TRUENAME should be left sufficiently vague that    > an implementation that always returned its first argument would be valid.    > A lot of the Common Lisp file system interface has to be like that.    That's a good point -- I'd forgotten about networking from non-VMS    hosts.  However, if an implementation doesn't expand logical names    fully when requested to do so, users are going to run into the same    kind of strange behavior (i.e., within MERGE-PATHNAMES) that prompted    me to bring this up in the first place.  Yes, many network file access protocols are very poorly designed.  I don'tthink X3J13 is going to fix that.					     I don't see much point in    adding this functionality to the language unless the spec is tight    enough to ensure that it's going to solve the problem it was intended    to.That could be a problem, especially if the problem it's intended to solvecan't be precisely articulated in an implementation-independent way.    > It would be at least as reasonable to argue that checking for syntax    > errors is properly done during file name parsing (i.e. conversion from a    > string to a pathname object), as with all other Common Lisp syntax.    Yes, of course.  However, it's possible to construct pathnames which    might contain "syntax errors" by other means as well.  For instance, if    you merge pathnames from two different hosts you might end up with    subfields that are too long, illegal characters, etc.I should have said parsing and merging and component setting, i.e. allforms of pathname construction.*start*02862 00024 USaReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([10.0.0.11]) by Xerox.COM ; 14 SEP 88 15:29:51 PDTReceived: from cs.utah.edu by SAIL.Stanford.EDU with TCP; 14 Sep 88  14:58:13 PDTReceived: by cs.utah.edu (5.54/utah-2.0-cs)	id AA15192; Wed, 14 Sep 88 15:56:52 MDTReceived: by defun.utah.edu (5.54/utah-2.0-leaf)	id AA19228; Wed, 14 Sep 88 15:56:45 MDTFrom: sandra%defun@cs.utah.edu (Sandra J Loosemore)Message-Id: <8809142156.AA19228@defun.utah.edu>Date: Wed, 14 Sep 88 15:56:44 MDTSubject: Re: issue TRUENAME-SYNTAX-ONLYTo: David A. Moon <Moon@stony-brook.scrc.symbolics.com>Cc: Sandra J Loosemore <sandra%defun@cs.utah.edu>, cl-cleanup@sail.stanford.eduIn-Reply-To: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>, Wed, 14 Sep 88 15:54 EDT> Date: Wed, 14 Sep 88 15:54 EDT> From: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>> > Perhaps you can come up with a better description of what :SYNTAX-ONLY> does?  I appear to have struck out.>This issue seems to be getting bogged down in a morass; therefore, Iwould like to withdraw my proposal.  You've already indicated that youwould oppose the proposal on the grounds that it would take a"near-infinite" amount of time to implement unless the behavior isexplicitly left vague, so there doesn't seem much point to my tryingto further clarify what the function must do. > 					     I don't see much point in>     adding this functionality to the language unless the spec is tight>     enough to ensure that it's going to solve the problem it was intended>     to.> > That could be a problem, especially if the problem it's intended to solve> can't be precisely articulated in an implementation-independent way.I think you're confusing "implementation-independent" with"file-system-independent".  As I have grumbled about before, all ofthe pathname functions have this problem, not just the proposedextension to TRUENAME.  I think that the only alternative is to comeup with rules that all implementations must obey for specific filesystems: For files on BSD Unix hosts, the following values may besupplied for such-and-such a pathname component.  For files on VMShosts, this function returns X; for files on an MS-DOS host, thefunction returns Y.  Unless and until the standard goes into this kindof detail, I don't think that *any* of the Common Lisp pathnamefunctions (except for coercion between namestrings and pathnameobjects) can be used portably across implementations, evenimplementations running on the same host.  Granted, tightening up thespec would cause implementors more work, but without it you might aswell throw out the pathname functions entirely, for all the good theydo users who are trying to write portable programs. -Sandra-------*start*00812 00024 USaReturn-Path: <sandra%defun@cs.utah.edu>Received: from cs.utah.edu ([128.110.4.21]) by Xerox.COM ; 01 DEC 88 20:12:06 PSTReceived: from defun.utah.edu by cs.utah.edu (5.59/utah-2.1-cs)	id AA17886; Thu, 1 Dec 88 21:12:04 MSTReceived: by defun.utah.edu (5.59/utah-2.0-leaf)	id AA13996; Thu, 1 Dec 88 21:12:00 MSTFrom: sandra%defun@cs.utah.edu (Sandra J Loosemore)Message-Id: <8812020412.AA13996@defun.utah.edu>Date: Thu, 1 Dec 88 21:11:59 MSTSubject: Re: issue TRUENAME-SYNTAX-ONLYTo: masinter.paIn-Reply-To: masinter.pa@Xerox.COM, 1 Dec 88 14:58 PSTUnfortunately, I'm not going to have time to work on this in the nextwhile -- trying to get some cl-compiler issues nailed down in time forthe January meeting is going to take up just about all my spare time.-Sandra-------*start*00663 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 09 DEC 88 15:32:44 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 9 Dec 88  15:31:35 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 09 DEC 88 15:30:44 PSTDate: 9 Dec 88 15:29 PSTFrom: masinter.paSubject: Re: issue TRUENAME-SYNTAX-ONLYIn-reply-to: sandra%defun@cs.utah.edu (Sandra J Loosemore)'s message of Thu, 1 Dec 88 21:11:59 MSTTo: cl-cleanup@sail.stanford.eduMessage-ID: <881209-153044-1246@Xerox>This issue has been lumped with the "pathname" issues....