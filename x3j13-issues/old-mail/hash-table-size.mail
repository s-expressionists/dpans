*start*03000 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 20-Mar-89 12:49:24 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 20 MAR 89 12:49:24 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 20 Mar 89  12:41:39 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 560978; Mon 20-Mar-89 11:55:18 ESTDate: Mon, 20 Mar 89 11:55 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: HASH-TABLE-SIZE (version 1)To: CL-Cleanup@sail.stanford.educc: chapman%aitg.DEC@decwrl.dec.comMessage-ID: <19890320165503.1.MOON@EUPHRATES.SCRC.Symbolics.COM>This issue came up while reviewing section 2.2 of the draft standard.Does anyone object if I mail this to X3J13 and bring it up at theMarch meeting?  I couldn't find any sign that it has already been addressed.Issue:         HASH-TABLE-SIZEReferences:    CLtL p.283Category:      CLARIFICATIONEdit history:  Version 1, 20-Mar-89, by MoonProblem description:    CLtL contradicts itself on the meaning of the :SIZE argument to  MAKE-HASH-TABLE.  At the top of p.283, it says that the size is "the  maximum number of entries it can hold.  Usually the actual capacity of  the table is somewhat less."  At the bottom of the page it says "this  argument serves as a hint to the implementation of approximately how  many entries you intend to store."  So does the :SIZE intended to be the  actual capacity of the table, or the amount of storage allocated to hold  the table.  For example, if the implementation of hash tables is  designed for a loading of 65%, and the user specifies :SIZE 100, does  the table returned have space allocated for 100 entries, so that it  overflows and becomes bigger when 65 entries are inserted, or does the  table have space allocated for 154 entries, so that it overflows and  becomes bigger when 100 entries are inserted?Proposal (HASH-TABLE-SIZE:INTENDED-ENTRIES):  Believe the bottom of p.283 rather than the top.  The :SIZE argument  is approximately the number of entries that can be inserted without  the table having to grow.Rationale:    The bottom of p.283 is user-oriented, the top is implementation-oriented.  User-oriented seems more appropriate.Current practice:    Symbolics Genera 7.4 adheres to HASH-TABLE-SIZE:INTENDED-ENTRIES.  Other implementations were not surveyed.Cost to Implementors:  At worst adding a multiplication to MAKE-HASH-TABLE.Cost to Users:  Probably none, but it is hard to predict.Cost of non-adoption:    Implementations will probably vary in which of the two interpretations  they believe.  The language standard will not be self-consistent.Performance impact:  None of any significance.Benefits/Esthetics:  More self-consistent language.Discussion:  None.*start*01024 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 20-Mar-89 15:17:30 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 20 MAR 89 15:17:32 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 20 Mar 89  15:10:34 PSTReceived: from fafnir.think.com by Think.COM; Mon, 20 Mar 89 17:31:49 ESTReturn-Path: <gls@Think.COM>Received: from verdi.think.com by fafnir.think.com; Mon, 20 Mar 89 17:31:12 ESTReceived: by verdi.think.com; Mon, 20 Mar 89 17:27:56 ESTDate: Mon, 20 Mar 89 17:27:56 ESTFrom: Guy Steele <gls@Think.COM>Message-Id: <8903202227.AA19331@verdi.think.com>To: Moon@stony-brook.scrc.symbolics.comCc: CL-Cleanup@sail.stanford.edu, chapman%aitg.DEC@decwrl.dec.comIn-Reply-To: David A. Moon's message of Mon, 20 Mar 89 11:55 EST <19890320165503.1.MOON@EUPHRATES.SCRC.Symbolics.COM>Subject: Issue: HASH-TABLE-SIZE (version 1)I support HASH-TABLE-SIZE:INTENDED-ENTRIES.*start*02835 00024 US GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 21-Mar-89 15:15:24 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 21 MAR 89 15:11:48 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 21 Mar 89  15:00:44 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 562317; Tue 21-Mar-89 18:00:29 ESTDate: Tue, 21 Mar 89 18:00 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: HASH-TABLE-SIZE (version 1)To: X3J13@SAIL.STANFORD.EDUReferences: <19890320165503.1.MOON@EUPHRATES.SCRC.Symbolics.COM>Message-ID: <19890321230023.2.MOON@EUPHRATES.SCRC.Symbolics.COM>This issue came up while reviewing section 2.2 of the draft standard.Issue:         HASH-TABLE-SIZEReferences:    CLtL p.283Category:      CLARIFICATIONEdit history:  Version 1, 20-Mar-89, by MoonProblem description:    CLtL contradicts itself on the meaning of the :SIZE argument to  MAKE-HASH-TABLE.  At the top of p.283, it says that the size is "the  maximum number of entries it can hold.  Usually the actual capacity of  the table is somewhat less."  At the bottom of the page it says "this  argument serves as a hint to the implementation of approximately how  many entries you intend to store."  So does the :SIZE intended to be the  actual capacity of the table, or the amount of storage allocated to hold  the table.  For example, if the implementation of hash tables is  designed for a loading of 65%, and the user specifies :SIZE 100, does  the table returned have space allocated for 100 entries, so that it  overflows and becomes bigger when 65 entries are inserted, or does the  table have space allocated for 154 entries, so that it overflows and  becomes bigger when 100 entries are inserted?Proposal (HASH-TABLE-SIZE:INTENDED-ENTRIES):  Believe the bottom of p.283 rather than the top.  The :SIZE argument  is approximately the number of entries that can be inserted without  the table having to grow.Rationale:    The bottom of p.283 is user-oriented, the top is implementation-oriented.  User-oriented seems more appropriate.Current practice:    Symbolics Genera 7.4 adheres to HASH-TABLE-SIZE:INTENDED-ENTRIES.  Other implementations were not surveyed.Cost to Implementors:  At worst adding a multiplication to MAKE-HASH-TABLE.Cost to Users:  Probably none, but it is hard to predict.Cost of non-adoption:    Implementations will probably vary in which of the two interpretations  they believe.  The language standard will not be self-consistent.Performance impact:  None of any significance.Benefits/Esthetics:  More self-consistent language.Discussion:  None.*start*01365 00024 US Date:  4 Apr 89 12:08 PDTSender: CL-Cleanup-mailer%SAIL.Stanford:EDU:XeroxFrom: KMP%STONY-BROOK.SCRC.Symbolics:COM:XeroxSubject: Issue: HASH-TABLE-SIZETo: CL-Cleanup%SAIL.Stanford:EDU:XeroxGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: HASH-TABLE-SIZETo: CL-Cleanup@SAIL.Stanford.EDUReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 04 APR 89 11:51:07 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM by SAIL.Stanford.EDU with TCP; 4 Apr 89  11:48:15 PDTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via INTERNET with SMTP id 571161; 4 Apr 89 14:47:57 EDTOriginal-Date: Tue, 4 Apr 89 14:47 EDTMessage-ID: <890404144729.4.KMP@BOBOLINK.SCRC.Symbolics.COM>GVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVIt was suprising to me how much controversy there was on this.Moon thinks the basic disagreement is that some people (JonL) think thatthe hash nature of tables should be explicitly exposed and other people(Moon) think it should be hidden; consider a fixnum value for :rehash-threshold, which interacts with the value of :size, accordingto JonL.This issue was deferred to the next meeting on a 13-2 vote.