*start*00805 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 06 JAN 89 15:06:18 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 6 Jan 89  15:03:58 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 05 JAN 89 23:11:08 PSTDate: 5 Jan 89 23:10 PSTFrom: masinter.paSubject:  Issue APPLYHOOK-ENVIRONMENT (not submitted)In-reply-to: Kim A. Barrett <IIM@ECLA.USC.EDU>'s message of Wed, 4 Jan 89 13:59:03 PSTTo: cl-cleanup@SAIL.STANFORD.EDUMessage-ID: <890105-231108-192@Xerox>I can't find any issue to remove the ENV argument from APPLYHOOK, althoughI remember the discussion of it (I think on the common lisp mailing list.).I'm reserving issue name APPLYHOOK-ENVIRONMENT.*start*01921 00024 USfReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 06 JAN 89 22:49:05 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 6 Jan 89  22:45:34 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 06 JAN 89 11:50:58 PSTDate: 6 Jan 89 11:49 PSTFrom: masinter.paSubject: Issue: APPLYHOOK-ENVIRONMENT (Version 1)To: cl-cleanup@sail.stanford.eduMessage-ID: <890106-115058-253@Xerox>!Forum:	CleanupIssue:         APPLYHOOK-ENVIRONMENTReferences:    APPLYHOOK (CLtL p. 323)Category:      CHANGEEdit history:  Masinter,  6-Jan-89, Version 1Problem description:The function APPLYHOOK is documented to take an optional environmentargument. CLtL says "Furthermore, the env argument is used as the lexicalenvironment for the operation; env defaults to the null environment." However, there is no way that the lexical environment can effect the way inwhich APPLYHOOK processes its arguments; it merely calls the specifiedfunction, and function call is not affected by lexical environments. (The"function" argument to APPLYHOOK is a function object.)This has been regularly a source of confusion for programmers encounteringAPPLYHOOK.Proposal (APPLYHOOK-ENVIRONMENT:REMOVE-ENV): Remove the optional "ENV"argument to applyhook. Rationale:Removes a very minor wart.Current practice:Most implementations accept an extra argument and then ignore it.Cost to Implementors:Remove optional ENV argument from APPLYHOOK and any code that passes one toAPPLYHOOK.Cost to Users:Remove any ENV argument passed to APPLYHOOK.Cost of non-adoption:Continued confusion.Performance impact:NoneBenefits:Removes a wart.Esthetics:Minor improvement.Discussion:This was discussed  on the Common Lisp mailing list several years ago, butslipped thru the cracks.*start*01007 00024 US Return-Path: <eb@lucid.com>Received: from lucid.com ([192.26.25.1]) by Xerox.COM ; 08 JAN 89 18:32:44 PSTReceived: from blacksox ([192.9.201.39]) by heavens-gate.lucid.com id AA00178g; Sun, 8 Jan 89 18:29:43 PSTReceived: by blacksox id AA00920g; Sun, 8 Jan 89 18:31:55 pstDate: Sun, 8 Jan 89 18:31:55 pstFrom: Eric Benson <eb@lucid.com>Message-Id: <8901090231.AA00920@blacksox>To: masinter.paCc: cl-cleanup@sail.stanford.eduIn-Reply-To: masinter.pa@Xerox.COM's message of 6 Jan 89 11:49 PST <890106-115058-253@Xerox>Subject: Issue: APPLYHOOK-ENVIRONMENT (Version 1)This applies also to functions bound to *APPLYHOOK*, i.e., under thedescription of *APPLYHOOK* on p.322, the following"The non-NIL value of *APPLYHOOK* should be a function that takesthree arguments, a function, a list of arguments and anenvironment..."should be changed to say"The non-NIL value of *APPLYHOOK* should be a function that takestwo arguments, a function and a list of arguments..."*start*00634 00024 US Return-Path: <gsb@ALDERAAN.SCRC.Symbolics.COM>Received: from ALDERAAN.SCRC.Symbolics.COM ([128.81.41.109]) by Xerox.COM ; 08 JAN 89 15:49:47 PSTReceived: from GANG-GANG.SCRC.Symbolics.COM by ALDERAAN.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 257158; Sun 8-Jan-89 18:49:16 ESTDate: Sun, 8 Jan 89 18:48 ESTFrom: Glenn S. Burke <gsb@ALDERAAN.SCRC.Symbolics.COM>Subject: Re: APPLYHOOK-ENVIRONMENT (Version 1)To: masinter.paIn-Reply-To: <890106-115058-253@Xerox>Message-ID: <19890108234846.3.GSB@GANG-GANG.SCRC.Symbolics.COM>The value of *APPLYHOOK* is still to receive an environment arg, though?*start*02355 00024 US Date: 10 Jan 89 15:42 PSTFrom: masinter.paSubject: Issue: APPLYHOOK-ENVIRONMENT (Version 2)To: x3j13@sail.stanford.edureply-to: cl-cleanup@sail.stanford.eduline-fold: nocc: masinterIn addition to the many issues on the ballot, there area number of other issues that are in various states ofcompletion. If we have time, we may be able to considersome of these.Forum:         CleanupIssue:         APPLYHOOK-ENVIRONMENTReferences:    APPLYHOOK (CLtL p. 323)Category:      CHANGEEdit history:  Masinter,  6-Jan-89, Version 1               Masinter, 10-Jan-89, Version 2Problem description:The function APPLYHOOK is documented to take an optional environmentargument. CLtL says "Furthermore, the env argument is used as the lexicalenvironment for the operation; env defaults to the null environment." However, there is no way that the lexical environment can effect the way inwhich APPLYHOOK processes its arguments; it merely calls the specifiedfunction, and function call is not affected by lexical environments. (The"function" argument to APPLYHOOK is a function object.)This has been regularly a source of confusion for programmers encounteringAPPLYHOOK.The comments also apply to functions bound to *APPLYHOOK*, i.e., under thedescription of *APPLYHOOK* on p.322, the following"The non-NIL value of *APPLYHOOK* should be a function that takesthree arguments, a function, a list of arguments and anenvironment..."Proposal (APPLYHOOK-ENVIRONMENT:REMOVE-ENV): Remove the optional "ENV" argument to APPLYHOOK. Specifythat the non-NIL value of *APPLYHOOK* should be a function that takestwo arguments, a function and a list of arguments.Rationale:Removes a very minor wart.Current practice:Most implementations accept an extra argument and then ignore it.Cost to Implementors:Remove optional ENV argument from APPLYHOOK and any code that passes one toAPPLYHOOK.Cost to Users:Remove any ENV argument passed to APPLYHOOK. Fix any *APPLYHOOK* functions to only take two arguments (or to make the third argument optional.)Cost of non-adoption:Continued confusion.Performance impact:NoneBenefits:Removes a wart.Esthetics:Minor improvement.Discussion:This was discussed on the Common Lisp mailing list several years ago, butslipped through the cracks.*start*01373 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 11 JAN 89 14:33:28 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 11 Jan 89  12:24:55 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via INTERNET with SMTP id 519255; 11 Jan 89 12:08:07 ESTDate: Wed, 11 Jan 89 12:07 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: APPLYHOOK-ENVIRONMENT (Version 2)To: Masinter.PAcc: CL-Cleanup@SAIL.Stanford.EDU, KMP@STONY-BROOK.SCRC.Symbolics.COMIn-Reply-To: <890110-154231-6930@Xerox>Message-ID: <890111120758.5.KMP@BOBOLINK.SCRC.Symbolics.COM>[X3J13 removed.]For compatibility, we might want to consider either explicitlypermitting implementations to accept a third optional argumentto APPLYHOOK, which would be defined to be ignored, or elseactually require implementations to accept such an argument.In the Cost to Users, you should highlight that the reason formaking the third argument optional is only for source compatibilitywith CLtL. There should be no doubt that the value of *APPLYHOOK*will only receive only two arguments.Anyway, I approve of this proposal, whether the writeup is ultimately ammended or not.