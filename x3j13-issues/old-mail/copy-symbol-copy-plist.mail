*start*02033 00024 USfReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 10 JAN 89 10:20:24 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 10 Jan 89  10:19:41 PSTReturn-Path: <barmar@Think.COM>Received: from sauron.think.com by Think.COM; Tue, 10 Jan 89 13:11:50 ESTReceived: from OCCAM.THINK.COM by sauron.think.com; Tue, 10 Jan 89 13:16:52 ESTDate: Tue, 10 Jan 89 13:17 ESTFrom: Barry Margolin <barmar@Think.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: cl-cleanup@sail.stanford.eduMessage-Id: <19890110181742.7.BARMAR@OCCAM.THINK.COM>Issue:		COPY-SYMBOL-COPY-PLISTReferences:	COPY-SYMBOL (p 169), COPY-LIST (p 268), COPY-TREE (p		269).Category:	CLARIFICATIONEdit history:	10-Jan-89, Version 1 by MargolinProblem Description:The description of COPY-SYMBOL, where the COPY-PROPS optional argumentis non-NIL, says that a copy of the property list is used as the newsymbol's property list.  However, there are several ways in which a listmay be copied, most notably COPY-LIST and COPY-TREE, and the descriptiondoesn't say which mechanism should be used.Proposal (COPY-SYMBOL-COPY-PLIST:COPY-LIST)Clarify that when COPY-SYMBOL copies the property list of the symbol, itis as if (COPY-LIST (SYMBOL-PLIST sym)) were used as the new symbol'sproperty list.Rationale:COPY-LIST is the simplest list-copying primitive.  The result of thiscopy is that GET returns EQL results for the two symbols until one ofthe property lists is altered, but altering either of the property listsdoesn't affect the other.  This is current practice in theimplementations I tested, and probably what most users assume.Current Practice:Symbolics Genera and Sun Common Lisp currently implement this.  Isuspect most others do, too.Cost to Implementors:Little or none.Cost to Users:None unless they've been assuming some other type of copy.Benefits:Less ambiguity.Aesthetics:Well, I like it.*start*05062 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 10 JAN 89 15:53:11 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 10 Jan 89  15:52:01 PSTReturn-Path: <barmar@Think.COM>Received: from sauron.think.com by Think.COM; Tue, 10 Jan 89 18:42:52 ESTReceived: from OCCAM.THINK.COM by sauron.think.com; Tue, 10 Jan 89 18:48:05 ESTDate: Tue, 10 Jan 89 18:48 ESTFrom: Barry Margolin <barmar@Think.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: Kent M Pitman <KMP@stony-brook.scrc.symbolics.com>Cc: cl-cleanup@sail.stanford.eduIn-Reply-To: <890110173307.3.KMP@BOBOLINK.SCRC.Symbolics.COM>Message-Id: <19890110234853.0.BARMAR@OCCAM.THINK.COM>    Date: Tue, 10 Jan 89 17:33 EST    From: Kent M Pitman <KMP@stony-brook.scrc.symbolics.com>	Date: Tue, 10 Jan 89 13:17 EST	From: Barry Margolin <barmar@Think.COM>	...	Rationale:	COPY-LIST is the simplest list-copying primitive.	...    In my book it's the -only- list-copying primitive. COPY-TREE doesn't    copy lists, it copies trees. Abstractly, there is no relationship    between the two except for people who think it's a bug that     (MEMBER 'A '(B (A) C))    doesn't find A in the given list.If you're going to play semantic games, MEMBER searches sets, not lists.If the definition of what it means to "copy a list" were obvious, CLtLwouldn't need three sentences to describe it, it could simply say"copies the list and returns the copy."  Also, the description ofCOPY-LIST doesn't mention that it is THE copier for the abstract type"list" (the first sentences of the COPY-ALIST and COPY-TREE descriptionsDO say something to that effect for their respective abstract types), itmerely describes the operation of the function.  Readers of standardsare not supposed to make assumptions based on names, so one can't assumethat copying lists in general implies COPY-LIST.    I don't think there's much issue here, but I'm happy to go along with it    if you think there is.    If we do proceed, I'd go so far as to say that Kathy might want to    document that wherever in plain text the phrase "copy the list" is used,    the equivalent of COPY-LIST is intended, that wherever in plain text the    phrase "copy the tree" is used, the equivalent of COPY-TREE is intended,    and that wherever in plain text the phrase "copy the alist" is used, the    equivalent of COPY-ALIST is intended.  This would save us having 42 more    of these issues come up now that you've opened this particular box    marked "Pandora"...I agree with you in principle, but I don't think this particular case isso obvious that it goes without saying.  What CLtL actually says in thiscase is "the property list of the new symbol will be a copy of SYM's."The problem is that COPY-TREE produces a result that has many of thesame properties as that produced by COPY-LIST, and in the case ofcopying property lists it may not be so obvious which of theseproperties are important.  If there were a COPY-PLIST function it wouldbe pretty obvious that its semantics were intended; if there were such afunction, it might conceivably copy even elements differently from oddelements, if we were to decide that indicators and values had differentimportant properties.  An implementor of COPY-SYMBOL might think thatsuch different semantics are necessary even without the existence ofsuch a function.I don't think the Pandora's box is that big.  I don't think there aremany places where lists or trees are automatically copied.  I can'tthink offhand of ANY place where it might say "copy the tree" (I thinkthe only standard functions that know about trees as an abstract objectare TREE-EQUAL, COPY-TREE, SUBST and its variants, and SUBLIS and itsvariants).The Pandora's box isn't empty, though.  I just noticed that COPY-SEQdoesn't specify precisely how the sequence is copied.  In fact, COPY-SEQsays that it is equivalent to (SUBSEQ sequence 0), and the descriptionof SUBSEQ says "it never shares storage with an old sequence."  You andI know that the latter means "it never shares top-level storage", but itcould easily be interpreted to mean that none of the storage of theoriginal object is shared.  We know that because we understand how Lispdifferentiates between a structured object and its contents, but mosttraditional languages don't make such a distinction, so I think it isimportant that the CL standard not presume this abstract understanding.I'm currently writing a paper about copying and equality that I hope tohave done in time to distribute at the meeting, and it has sensitized meto the need to specify these things explicitly.  Also, if we don'tcorrect them now, I'll wager we'll have to after the standard goes outfor public review (I've seen the kinds of comments that come back fromANSI public reviews, and they can find an amazing number of nits topick).                                                barmar*start*01800 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 10 JAN 89 14:41:38 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 10 Jan 89  14:36:11 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 518783; Tue 10-Jan-89 17:33:14 ESTDate: Tue, 10 Jan 89 17:33 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: barmar@Think.COMcc: cl-cleanup@sail.stanford.eduIn-Reply-To: <19890110181742.7.BARMAR@OCCAM.THINK.COM>Message-ID: <890110173307.3.KMP@BOBOLINK.SCRC.Symbolics.COM>    Date: Tue, 10 Jan 89 13:17 EST    From: Barry Margolin <barmar@Think.COM>    ...    Rationale:    COPY-LIST is the simplest list-copying primitive.    ...In my book it's the -only- list-copying primitive. COPY-TREE doesn'tcopy lists, it copies trees. Abstractly, there is no relationshipbetween the two except for people who think it's a bug that (MEMBER 'A '(B (A) C))doesn't find A in the given list.I don't think there's much issue here, but I'm happy to go along with itif you think there is.If we do proceed, I'd go so far as to say that Kathy might want todocument that wherever in plain text the phrase "copy the list" is used,the equivalent of COPY-LIST is intended, that wherever in plain text thephrase "copy the tree" is used, the equivalent of COPY-TREE is intended,and that wherever in plain text the phrase "copy the alist" is used, theequivalent of COPY-ALIST is intended.  This would save us having 42 moreof these issues come up now that you've opened this particular boxmarked "Pandora"...*start*01186 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 11 JAN 89 19:59:42 PSTReceived: from lucid.com by SAIL.Stanford.EDU with TCP; 11 Jan 89  19:49:29 PSTReceived: from bhopal ([192.9.200.13]) by heavens-gate.lucid.com id AA04432g; Wed, 11 Jan 89 19:44:42 PSTReceived: by bhopal id AA07369g; Wed, 11 Jan 89 19:47:00 PSTDate: Wed, 11 Jan 89 19:47:00 PSTFrom: Jon L White <jonl@lucid.com>Message-Id: <8901120347.AA07369@bhopal>To: barmar@Think.COMCc: KMP@stony-brook.scrc.symbolics.com, cl-cleanup@sail.stanford.eduIn-Reply-To: Barry Margolin's message of Tue, 10 Jan 89 18:48 EST <19890110234853.0.BARMAR@OCCAM.THINK.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTre:  We know that because we understand how Lisp    differentiates between a structured object and its contents, but most    traditional languages don't make such a distinction, so I think it is    important that the CL standard not presume this abstract understanding.I agree with you here.  And I don't think it is that painful to becorrect and exact in the specification.-- JonL --*start*01156 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 15-Mar-89 11:12:54 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 15 MAR 89 11:11:14 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 15 Mar 89  11:11:37 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 557610; Wed 15-Mar-89 14:09:10 ESTDate: Wed, 15 Mar 89 14:09 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: Masinter.pacc: Barry Margolin <barmar@Think.COM>, cl-cleanup@sail.stanford.eduIn-Reply-To: <19890110181742.7.BARMAR@OCCAM.THINK.COM>Message-ID: <19890315190909.7.MOON@EUPHRATES.SCRC.Symbolics.COM>Line-fold: NoThis one was marked with a * on your status report, but I don'tthink it was ever brought up to the committee, and I don't thinkit needs amendment.  The discussion was just over whetherit's really a cleanup issue or an editorial issue.  Let's justvote on it as-is.*start*02157 00024 US GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 16-Mar-89 12:27:35 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 12:27:20 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 16 Mar 89  12:12:12 PSTReceived: from Cabernet.ms by ArpaGateway.ms ; 16 MAR 89 11:27:49 PSTDate: 16 Mar 89 11:27 PSTFrom: masinter.paSubject: Issue: COPY-SYMBOL-COPY-PLIST, v.1To: x3j13@sail.stanford.eduline-fold: NOMessage-ID: <890316-112749-4871@Xerox>The only discussion on this issue was whether it was necessaryto clarify (some thought it was) and whether a more general "copy the list means COPY-LIST" was necessary (probably not.)There was no controversy on the proposal itself.!Issue:		COPY-SYMBOL-COPY-PLISTReferences:	COPY-SYMBOL (p 169), COPY-LIST (p 268), COPY-TREE (p		269).Category:	CLARIFICATIONEdit history:	10-Jan-89, Version 1 by MargolinProblem Description:The description of COPY-SYMBOL, where the COPY-PROPS optional argumentis non-NIL, says that a copy of the property list is used as the newsymbol's property list.  However, there are several ways in which a listmay be copied, most notably COPY-LIST and COPY-TREE, and the descriptiondoesn't say which mechanism should be used.Proposal (COPY-SYMBOL-COPY-PLIST:COPY-LIST)Clarify that when COPY-SYMBOL copies the property list of the symbol, itis as if (COPY-LIST (SYMBOL-PLIST sym)) were used as the new symbol'sproperty list.Rationale:COPY-LIST is the simplest list-copying primitive.  The result of thiscopy is that GET returns EQL results for the two symbols until one ofthe property lists is altered, but altering either of the property listsdoesn't affect the other.  This is current practice in theimplementations I tested, and probably what most users assume.Current Practice:Symbolics Genera and Sun Common Lisp currently implement this.  Isuspect most others do, too.Cost to Implementors:Little or none.Cost to Users:None unless they've been assuming some other type of copy.Benefits:Less ambiguity.Aesthetics:Well, I like it.*start*01009 00024 US GV-Info: Moon@STONY-BROOK.SCRC.Symbolics.COM at 16-Mar-89 13:39:31 from AGReturn-Path: <Moon@STONY-BROOK.SCRC.Symbolics.COM>Received: from STONY-BROOK.SCRC.Symbolics.COM ([128.81.41.144]) by Xerox.COM ; 16 MAR 89 13:39:21 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 557610; Wed 15-Mar-89 14:09:10 ESTDate: Wed, 15 Mar 89 14:09 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: Masinter.pacc: Barry Margolin <barmar@Think.COM>, cl-cleanup@sail.stanford.eduIn-Reply-To: <19890110181742.7.BARMAR@OCCAM.THINK.COM>Message-ID: <19890315190909.7.MOON@EUPHRATES.SCRC.Symbolics.COM>Line-fold: NoThis one was marked with a * on your status report, but I don'tthink it was ever brought up to the committee, and I don't thinkit needs amendment.  The discussion was just over whetherit's really a cleanup issue or an editorial issue.  Let's justvote on it as-is.*start*01012 00024 US Date:  4 Apr 89 08:38 PDTSender: CL-Cleanup-mailer%SAIL.Stanford:EDU:XeroxFrom: KMP%STONY-BROOK.SCRC.Symbolics:COM:XeroxSubject: Issue: COPY-SYMBOL-COPY-PLISTTo: CL-Cleanup%SAIL.Stanford:EDU:XeroxGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: COPY-SYMBOL-COPY-PLISTTo: CL-Cleanup@SAIL.Stanford.EDUReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 04 APR 89 08:37:58 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM by SAIL.Stanford.EDU with TCP; 4 Apr 89  08:34:19 PDTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 570919; Tue 4-Apr-89 11:34:14 EDTOriginal-Date: Tue, 4 Apr 89 11:33 EDTMessage-ID: <890404113350.3.KMP@BOBOLINK.SCRC.Symbolics.COM>GVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVMy notes say this passed unanimously.