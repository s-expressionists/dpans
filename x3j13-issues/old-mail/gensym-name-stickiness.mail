*start*03834 00024 USfReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 14 FEB 89 12:14:15 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 14 Feb 89  12:13:45 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 538965; Tue 14-Feb-89 15:11:46 ESTDate: Tue, 14 Feb 89 15:11 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: GENSYM-NAME-STICKINESS (Version 1)To: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <890214151129.1.KMP@BOBOLINK.SCRC.Symbolics.COM>If someone wants to argue that it's too late to consider things likethis, I won't make serious objection.  But I recently battled thisproblem yet again and I'm just fed up -- writing up the issue was themost obvious way I could think of to relieve a little tension. Maybeenough people will empathize with my feelings on this to help me sneakit in at the last minute...-----Issue:        GENSYM-NAME-STICKINESSForum:	      CleanupReferences:   GENSYM (p169)Category:     CHANGEEdit history: 14-Feb-89, Version 1 by PitmanStatus:	      For Internal DiscussionProblem Description:  Many people avoid use of the argument to GENSYM because the argument  is `sticky' and such stickiness can lead to confusion. The problem is  that if any application (usually a macro) uses the gensym argument at  all, then all applications are forced to. If they do not, they risk  finding that the `helpful' argument supplied in some previous call will  be harmful to them.Proposal (GENSYM-NAME-STICKINESS:WASH-HANDS):  Define that if an optional argument is given to GENSYM, it does NOT  have a side-effect on GENSYM's internal state.Rationale:  Conscientious programmers are forced now to write their own GENSYM  lookalikes because they know the system's GENSYM has an invasive  effect. This defeats the primary intended function of GENSYM, which  is to satisfy the most common idiomatic use of MAKE-SYMBOL.  The stickiness of the GENSYM prefix was an attempt to be gratuitously  compatible with Maclisp, at the expense of good programming pratice.  Users who need the old behavior of GENSYM can trivially implement  that behavior using MAKE-SYMBOL.Test Case:  (CHAR-EQUAL (CHAR (SYMBOL-NAME (SECOND (LIST (GENSYM "A") (GENSYM)))) 0)	      #\G)  => NIL ;under CLtL  => T   ;under this proposalCurrent Practice:  Symbolics Cloe and Genera are compatible with CLtL, so this would be an  incompatible change.Cost to Implementors:  Very small.Cost to Users:  Most uses of GENSYM do not depend on the stickiness of the name, so the  change would be compatible. In some cases, the change would be an  improvement. Even in the worst case where someone depends on stickiness,  it's extremely straightforward to write the couple of lines of code to  produce an application based on MAKE-SYMBOL that is at least as flexible  as GENSYM, and often moreso.Cost of Non-Adoption:  Good programmers would avoid using the argument to GENSYM (or using   GENSYM altogether) in many situations where they ought not have to.Benefits:  Gensyms which appear to convey information through their name would not  accidentally pop out and cause confusion in places where they oughtn't.Aesthetics:  Unnecessary global state changes are hard to reason about. This would   be a small simplification.Discussion:  Pitman claims to have written a non-sticky GENSYM function for nearly  every one of the dozen or so large systems that he's written or worked  on in the last decade in order to get around the stated problem.  Others have suggested similar experience.  Pitman supports the proposal. *start*01492 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 14 FEB 89 13:28:02 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 14 Feb 89  13:28:11 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 539059; Tue 14-Feb-89 16:26:11 ESTReturn-path: <peck@SUN.COM>Received: from SUN.COM by STONY-BROOK.SCRC.Symbolics.COM via INTERNET with SMTP id 539019; 14 Feb 89 15:55:00 ESTReceived: from snail.Sun.COM by Sun.COM (4.1/SMI-4.0)	id AA03383; Tue, 14 Feb 89 12:57:31 PSTReceived: from denali.sun.com by snail.Sun.COM (4.1/SMI-4.0)	id AA12283; Tue, 14 Feb 89 12:54:05 PSTReceived: from localhost by denali.sun.com (3.2/SMI-3.2)	id AA03628; Tue, 14 Feb 89 12:57:00 PSTMessage-Id: <8902142057.AA03628@denali.sun.com>To: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Re: Issue: GENSYM-NAME-STICKINESS (Version 1) In-Reply-To: Your message of Tue, 14 Feb 89 15:11:00 -0500;	<890214151129.1.KMP@BOBOLINK.SCRC.Symbolics.COM> .Date: Tue, 14 Feb 89 12:56:58 PSTFrom: peck@Sun.COMResent-To: CL-Cleanup@SAIL.Stanford.EDUResent-From: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Resent-Date: Tue, 14 Feb 89 16:25 ESTResent-Message-ID: <890214162556.4.KMP@BOBOLINK.SCRC.Symbolics.COM>YAY!!!    This is what "cleanup" is for.  Go For It!*start*00977 00024 US Return-Path: <Gray@DSG.csc.ti.com>Received: from ti.com ([10.7.0.46]) by Xerox.COM ; 16 FEB 89 10:34:17 PSTReceived: by ti.com id AA03955; Thu, 16 Feb 89 12:34:19 CSTReceived: from Kelvin by tilde id AA12734; Thu, 16 Feb 89 12:29:39 CSTMessage-Id: <2812645749-8137850@Kelvin>Sender: GRAY@Kelvin.csc.ti.comDate: Thu, 16 Feb 89 12:29:09 CSTFrom: David N Gray <Gray@DSG.csc.ti.com>To: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Cc: masinter.paSubject: Re: Issue: GENSYM-NAME-STICKINESS (Version 1)In-Reply-To: Msg of Tue, 14 Feb 89 15:11 EST from Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>> Proposal (GENSYM-NAME-STICKINESS:WASH-HANDS):> >   Define that if an optional argument is given to GENSYM, it does NOT>   have a side-effect on GENSYM's internal state.Sounds like a good idea to me.  I have been using the followingnon-portable idiom to work around this myself:  (LET ((SI:*GENSYM-PREFIX* <my-prefix>)) (GENSYM))*start*00910 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 16-Mar-89 05:22:39 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 05:22:09 PSTReceived: from RELAY.CS.NET by SAIL.Stanford.EDU with TCP; 16 Mar 89  05:23:07 PSTReceived: from relay2.cs.net by RELAY.CS.NET id ab00401; 16 Mar 89 8:13 ESTReceived: from draper.com by RELAY.CS.NET id aa08495; 16 Mar 89 8:10 ESTDate: Thu, 16 Mar 89 07:58 ESTFrom: "Steve Bacher (Batchman)" <SEB1525@draper.com>Subject: Re: Issue: GENSYM-NAME-STICKINESS, version 2To: cl-cleanup@SAIL.STANFORD.EDUX-VMS-To: CL-CLEANUP,SEB1525I like it.  But one suggestion: Instead of (gensym-counter <n>) which updates the gensym counter, why not(gensym-counter) which returns the current gensym counter, and(setf (gensym-counter) <n>) ???*start*01838 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 16-Mar-89 11:21:30 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 11:16:29 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 16 Mar 89  11:15:10 PSTReceived: from fafnir.think.com by Think.COM; Thu, 16 Mar 89 13:52:43 ESTReturn-Path: <gls@Think.COM>Received: from verdi.think.com by fafnir.think.com; Thu, 16 Mar 89 13:53:38 ESTReceived: by verdi.think.com; Thu, 16 Mar 89 13:50:26 ESTDate: Thu, 16 Mar 89 13:50:26 ESTFrom: Guy Steele <gls@Think.COM>Message-Id: <8903161850.AA04888@verdi.think.com>To: KMP@stony-brook.scrc.symbolics.comCc: GLS@Think.COM, CL-Cleanup@sail.stanford.eduIn-Reply-To: Kent M Pitman's message of Thu, 16 Mar 89 09:44 EST <890316094401.9.KMP@BOBOLINK.SCRC.Symbolics.COM>Subject: Issue: GENSYM-NAME-STICKINESS, version 2   Date: Thu, 16 Mar 89 09:44 EST   From: Kent M Pitman <KMP@stony-brook.scrc.symbolics.com>   Can you motivate why you want a function rather than a variable   for the counter control? For example, a useful feature of a   variable would be to bind it.    My basic feeling is that if we need a function rather than variable,   we must need the function for a reason. What is the function providing   that is worth the added descriptive overhead and loss of (binding)   flexibility but that is not stated in the writeup?So that at the time the counter is changed I can convert it topacked decimal on a VAX and use string instructions.Seriously, I had in mind doing error-checking at counter-setting timeand thus avoiding questions of what happens when if you supply a boguscounter value.But if that is not worth it, then I will settle for a variable.--Guy*start*03528 00024 US GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 14-Mar-89 17:43:31 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 14 MAR 89 17:42:42 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 14 Mar 89  17:31:12 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 14 MAR 89 14:57:16 PSTDate: 14 Mar 89 14:56 PSTFrom: masinter.paSubject: Issue: GENSYM-NAME-STICKINESS (Version 1)To: x3j13@SAIL.Stanford.EDUreply-to: cl-cleanup@sail.stanford.eduline-fold: noMessage-ID: <890314-145716-2049@Xerox>Additional Comments include:"... it's ... late to consider things like this ...""YAY!!!    This is what "cleanup" is for. Go For It! ""Sounds like a good idea to me."!Issue:        GENSYM-NAME-STICKINESSForum:	      CleanupReferences:   GENSYM (p169)Category:     CHANGEEdit history: 14-Feb-89, Version 1 by PitmanProblem Description:  Many people avoid use of the argument to GENSYM because the argument  is `sticky' and such stickiness can lead to confusion. The problem is  that if any application (usually a macro) uses the gensym argument at  all, then all applications are forced to. If they do not, they risk  finding that the `helpful' argument supplied in some previous call will  be harmful to them.Proposal (GENSYM-NAME-STICKINESS:WASH-HANDS):  Define that if an optional argument is given to GENSYM, it does NOT  have a side-effect on GENSYM's internal state.Rationale:  Conscientious programmers are forced now to write their own GENSYM  lookalikes because they know the system's GENSYM has an invasive  effect. This defeats the primary intended function of GENSYM, which  is to satisfy the most common idiomatic use of MAKE-SYMBOL.  The stickiness of the GENSYM prefix was an attempt to be gratuitously  compatible with Maclisp, at the expense of good programming pratice.  Users who need the old behavior of GENSYM can trivially implement  that behavior using MAKE-SYMBOL.Test Case:  (CHAR-EQUAL (CHAR (SYMBOL-NAME (SECOND (LIST (GENSYM "A") (GENSYM)))) 0)	      #\G)  => NIL ;under CLtL  => T   ;under this proposalCurrent Practice:  Symbolics Cloe and Genera are compatible with CLtL, so this would be an  incompatible change.Cost to Implementors:  Very small.Cost to Users:  Most uses of GENSYM do not depend on the stickiness of the name, so the  change would be compatible. In some cases, the change would be an  improvement. Even in the worst case where someone depends on stickiness,  it's extremely straightforward to write the couple of lines of code to  produce an application based on MAKE-SYMBOL that is at least as flexible  as GENSYM, and often moreso.Cost of Non-Adoption:  Good programmers would avoid using the argument to GENSYM (or using   GENSYM altogether) in many situations where they ought not have to.Benefits:  Gensyms which appear to convey information through their name would not  accidentally pop out and cause confusion in places where they oughtn't.Aesthetics:  Unnecessary global state changes are hard to reason about. This would   be a small simplification.Discussion:  Pitman claims to have written a non-sticky GENSYM function for nearly  every one of the dozen or so large systems that he's written or worked  on in the last decade in order to get around the stated problem.  Others have suggested similar experience.  Pitman supports the proposal.      ----- End Forwarded Messages -----*start*01002 00024 US GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 15-Mar-89 10:10:42 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 15 MAR 89 10:10:39 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 15 Mar 89  09:48:17 PSTReceived: from fafnir.think.com by Think.COM; Wed, 15 Mar 89 12:44:45 ESTReturn-Path: <gls@Think.COM>Received: from verdi.think.com by fafnir.think.com; Wed, 15 Mar 89 12:46:05 ESTReceived: by verdi.think.com; Wed, 15 Mar 89 12:42:51 ESTDate: Wed, 15 Mar 89 12:42:51 ESTFrom: Guy Steele <gls@Think.COM>Message-Id: <8903151742.AA02653@verdi.think.com>To: cl-cleanup@sail.stanford.eduCc: x3j13@sail.stanford.eduIn-Reply-To: masinter.pa@xerox.com's message of 14 Mar 89 14:56 PST <890314-145716-2049@Xerox>Subject: Issue: GENSYM-NAME-STICKINESS (Version 1)Does KMP intend that GENSYM not be sticky for an integer argumentas well?  That is, there is no way to reset the counter?--Guy*start*02872 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 15-Mar-89 10:45:18 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 15 MAR 89 10:44:41 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 15 Mar 89  10:45:16 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 557570; Wed 15-Mar-89 13:42:53 ESTDate: Wed, 15 Mar 89 13:42 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: GENSYM-NAME-STICKINESS (Version 1)To: gls@Think.COMcc: CL-Cleanup@SAIL.Stanford.EDUIn-Reply-To: <8903151742.AA02653@verdi.think.com>Message-ID: <890315134243.9.KMP@BOBOLINK.SCRC.Symbolics.COM>[X3J13 removed.]    Date: Wed, 15 Mar 89 12:42:51 EST    From: Guy Steele <gls@Think.COM>    Does KMP intend that GENSYM not be sticky for an integer argument    as well?  That is, there is no way to reset the counter?The great thing about the idea of a writeup is that it can stand alone,regardless of what the author thinks.  The writeup is not ambiguous --it takes away the ability to reset the counter.Happily, that means I can disagree with the writeup without disagreeingwith myself.  It's obvious now that I think about it, that taking awaythe ability to reset the counter makes it nearly useless to be able toaffect the counter, since you cannot simultaneously pass a name and acounter (probably a mistake itself), and since you'd always get thesame number unless you did (GENSYM (INCF *MY-COUNTER*)) or some such.I myself have never used the gensym-counter-resetting feature. Ihave to say I don't think a lot of people use it either. The only useI can really think of is for resetting a system so that you can getthe same set of GENSYM names again in a second run to a bunch of code.If we were going to permit that, I would rather just document the variable that holds the counter and not have it be done as a side-effectof calling the function.My basic feeling is that the "easy use" of GENSYM is best satisfiedif only a name is permissible, and use of any other kind argument isstarting to get into hair that it best done by people rolling their ownusing MAKE-SYMBOL, FORMAT, and INCF.My inclination at this point would be to document a variable: *GENSYM-COUNTER*which held the GENSYM counter, and to say that GENSYM could only takea name argument (leaving other situations "undefined" so that implementations could provide a graceful transition), and to say thename argument is not sticky.However, the only part of this I really care about is that the namenot be sticky.  If you make any reasonable counterproposal that givesme that one feature, odds are that I'll support it.*start*04585 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 15-Mar-89 13:05:29 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 15 MAR 89 13:05:26 PSTReceived: from Think.COM by SAIL.Stanford.EDU with TCP; 15 Mar 89  13:05:38 PSTReceived: from fafnir.think.com by Think.COM; Wed, 15 Mar 89 16:01:40 ESTReturn-Path: <gls@Think.COM>Received: from verdi.think.com by fafnir.think.com; Wed, 15 Mar 89 16:02:59 ESTReceived: by verdi.think.com; Wed, 15 Mar 89 15:59:47 ESTDate: Wed, 15 Mar 89 15:59:47 ESTFrom: Guy Steele <gls@Think.COM>Message-Id: <8903152059.AA03501@verdi.think.com>To: cl-cleanup@sail.stanford.eduSubject: Issue: GENSYM-NAME-STICKINESS, version 2Cc: gls@Think.COMVersion 2 proposes to provide access to the counter state.Additional Comments include:"... it's ... late to consider things like this ...""YAY!!!    This is what "cleanup" is for. Go For It! ""Sounds like a good idea to me."!Issue:        GENSYM-NAME-STICKINESSForum:	      CleanupReferences:   GENSYM (p169)Category:     CHANGEEdit history: 14-Feb-89, Version 1 by Pitman	      15-Mar-89, Version 2 by SteeleProblem Description:  Many people avoid use of the argument to GENSYM because the argument  is `sticky' and such stickiness can lead to confusion. The problem is  that if any application (usually a macro) uses the gensym argument at  all, then all applications are forced to. If they do not, they risk  finding that the `helpful' argument supplied in some previous call will  be harmful to them.Proposal (GENSYM-NAME-STICKINESS:WASH-HANDS):  Define that if an optional argument is given to GENSYM, it does NOT  have a side-effect on GENSYM's internal state.  Define that the function GENSYM-COUNTER takes a non-negative integer n  and modifies the internal state of GENSYM so that the next symbol  generated will be number n.  GENSYM-COUNTER returns the old value  of the counter.Rationale:  Conscientious programmers are forced now to write their own GENSYM  lookalikes because they know the system's GENSYM has an invasive  effect. This defeats the primary intended function of GENSYM, which  is to satisfy the most common idiomatic use of MAKE-SYMBOL.  The stickiness of the GENSYM prefix was an attempt to be gratuitously  compatible with Maclisp, at the expense of good programming pratice.  Users who need the old behavior of GENSYM can trivially implement  that behavior using MAKE-SYMBOL.  Occasionally you want to reset the GENSYM counter so that, for example,  you can get the compiler to generate the same symbol names again  (good for comparing results to see what really changed).Test Case:  (CHAR-EQUAL (CHAR (SYMBOL-NAME (SECOND (LIST (GENSYM "A") (GENSYM)))) 0)	      #\G)  => NIL ;under CLtL  => T   ;under this proposal  (string= (symbol-name (progn (gensym-counter 43) (gensym "foo")))           "foo43") => TCurrent Practice:  Symbolics Cloe and Genera are compatible with CLtL, so this would be an  incompatible change.Cost to Implementors:  Very small.Cost to Users:  Most uses of GENSYM do not depend on the stickiness of the name, so the  change would be compatible. In some cases, the change would be an  improvement. Even in the worst case where someone depends on stickiness,  it's extremely straightforward to write the couple of lines of code to  produce an application based on MAKE-SYMBOL that is at least as flexible  as GENSYM, and often moreso.Cost of Non-Adoption:  Good programmers would avoid using the argument to GENSYM (or using   GENSYM altogether) in many situations where they ought not have to.Benefits:  Gensyms which appear to convey information through their name would not  accidentally pop out and cause confusion in places where they oughtn't.Aesthetics:  Unnecessary global state changes are hard to reason about. This would   be a small simplification.Discussion:  Pitman claims to have written a non-sticky GENSYM function for nearly  every one of the dozen or so large systems that he's written or worked  on in the last decade in order to get around the stated problem.  Others have suggested similar experience.  Pitman supported version 1.  In response to a query, he said:  "... the only part of this I really care about is that the name  not be sticky.  If you make any reasonable counterproposal that gives  me that one feature, odds are that I'll support it."  Steele supports this proposal.*start*05363 00024 USaGV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 21-Mar-89 08:49:55 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 21 MAR 89 08:49:55 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 21 Mar 89  08:45:45 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 561958; Tue 21-Mar-89 11:45:31 ESTDate: Tue, 21 Mar 89 11:45 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: GENSYM-NAME-STICKINESS (Version 3)To: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <890321114510.2.KMP@BOBOLINK.SCRC.Symbolics.COM>Hopefully this is a final version, ready for vote.Guy has already reviewed it and approves of the changes(removing GENSYM-COUNTER, adding variable *GENSYM-COUNTER*). -kmp-----Issue:        GENSYM-NAME-STICKINESSForum:	      CleanupReferences:   GENSYM (p169)Category:     CHANGEEdit history: 14-Feb-89, Version 1 by Pitman	      15-Mar-89, Version 2 by Steele (add GENSYM-COUNTER function)	      20-Mar-89, Version 3 by Pitman (make it a variable)Problem Description:  Many people avoid use of the argument to GENSYM because the argument  is `sticky' and such stickiness can lead to confusion. The problem is  that if any application (usually a macro) uses the gensym argument at  all, then all applications are forced to. If they do not, they risk  finding that the `helpful' argument supplied in some previous call will  be harmful to them.Proposal (GENSYM-NAME-STICKINESS:LIKE-TEFLON)  Define that if an optional argument [either a string or a number] is  given to GENSYM, it does NOT have a side-effect on GENSYM's internal state.  Introduce a new variable, *GENSYM-COUNTER*, which holds the state of  the gensym counter. That is, the next symbol generated by GENSYM will  be number n.  The initial value of this variable is not defined, but  must always be a non-negative integer. This variable may be either   assigned or bound by users at any time, but always to a non-negative  integer.  Deprecate the use of a numeric argument to GENSYM.Rationale:  Conscientious programmers are forced now to write their own GENSYM  lookalikes because they know the system's GENSYM has an invasive  effect. This defeats the primary intended function of GENSYM, which  is to satisfy the most common idiomatic use of MAKE-SYMBOL.  The stickiness of the GENSYM prefix was an attempt to be gratuitously  compatible with Maclisp, at the expense of good programming pratice.  Users who need the old behavior of GENSYM can trivially implement  that behavior using MAKE-SYMBOL.  Occasionally you want to reset the GENSYM counter so that, for example,  you can get the compiler to generate the same symbol names again  (good for comparing results to see what really changed).Test Case:  ;; #1: Test stickiness of name part.  (CHAR-EQUAL (CHAR (SYMBOL-NAME (SECOND (LIST (GENSYM "A") (GENSYM)))) 0)	      #\G)  => NIL ;under CLtL  => T   ;under this proposal  ;; #2: Test stickiness of number part.  (= (PARSE-INTEGER (PROGN (GENSYM 6789) (STRING (GENSYM "G"))) :START 1)     6790)  => T   ;under CLtL  => NIL ;under this proposal (except when *gensym-counter* happens to align)  ;; #3: Illustrate use of new variable.  (STRING= (SYMBOL-NAME (LET ((*GENSYM-COUNTER* 43)) (GENSYM "FOO")))           "FOO43")  => T   ;under this proposal (not meaningful previously)Current Practice:  Symbolics Cloe and Genera are compatible with CLtL, so this would be an  incompatible change.Cost to Implementors:  Very small.  If any implementations currently use a more compact representation for  the internal state of GENSYM than a variable holding a string and a  separate variable holding an integer, they might be forced to change.  Even then, the change would proabably still be quite small.Cost to Users:  Most uses of GENSYM do not depend on the stickiness of the name, so the  change would be compatible. In some cases, the change would be an  improvement. Even in the worst case where someone depends on stickiness,  it's extremely straightforward to write the couple of lines of code to  produce an application based on MAKE-SYMBOL that is at least as flexible  as GENSYM, and often moreso.Cost of Non-Adoption:  Good programmers would avoid using the argument to GENSYM (or using   GENSYM altogether) in many situations where they ought not have to.Benefits:  Gensyms which appear to convey information through their name would not  accidentally pop out and cause confusion in places where they oughtn't.  Making the gensym counter visible as a variable means that people will  be able to bind the gensym counter locally when they don't want to affect  the global counter.Aesthetics:  Unnecessary global state changes are hard to reason about. This would   be a small simplification.Discussion:  Pitman claims to have written a non-sticky GENSYM function for nearly  every one of the dozen or so large systems that he's written or worked  on in the last decade in order to get around the stated problem.  Others have suggested similar experience.  Pitman and Steele support LIKE-TEFLON.*start*00787 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 23-Mar-89 15:38:05 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 23 MAR 89 15:36:39 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 23 Mar 89  15:32:17 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 23 MAR 89 12:59:59 PSTDate: 23 Mar 89 12:59 PSTFrom: masinter.paSubject: Re: Issue: GENSYM-NAME-STICKINESS (Version 3)In-reply-to: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>'s message of Tue, 21 Mar 89 11:45 ESTTo: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>cc: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <890323-125959-5425@Xerox>please release to X3J13; thanks.*start*05191 00024 UU?GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 23-Mar-89 21:16:47 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 23 MAR 89 21:16:46 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 23 Mar 89  21:00:01 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 564017; Thu 23-Mar-89 17:34:54 ESTDate: Thu, 23 Mar 89 17:34 ESTFrom: CL-Cleanup@SAIL.Stanford.EDUSender: KMP@STONY-BROOK.SCRC.Symbolics.COMReply-To: CL-Cleanup@SAIL.Stanford.EDUSubject: Issue: GENSYM-NAME-STICKINESS (Version 3)To: X3J13@SAIL.Stanford.EDUMessage-ID: <890323173428.2.KMP@BOBOLINK.SCRC.Symbolics.COM>Issue:        GENSYM-NAME-STICKINESSForum:	      CleanupReferences:   GENSYM (p169)Category:     CHANGEEdit history: 14-Feb-89, Version 1 by Pitman	      15-Mar-89, Version 2 by Steele (add GENSYM-COUNTER function)	      20-Mar-89, Version 3 by Pitman (make it a variable)Problem Description:  Many people avoid use of the argument to GENSYM because the argument  is `sticky' and such stickiness can lead to confusion. The problem is  that if any application (usually a macro) uses the gensym argument at  all, then all applications are forced to. If they do not, they risk  finding that the `helpful' argument supplied in some previous call will  be harmful to them.Proposal (GENSYM-NAME-STICKINESS:LIKE-TEFLON)  Define that if an optional argument [either a string or a number] is  given to GENSYM, it does NOT have a side-effect on GENSYM's internal state.  Introduce a new variable, *GENSYM-COUNTER*, which holds the state of  the gensym counter. That is, the next symbol generated by GENSYM will  be number n.  The initial value of this variable is not defined, but  must always be a non-negative integer. This variable may be either   assigned or bound by users at any time, but always to a non-negative  integer.  Deprecate the use of a numeric argument to GENSYM.Rationale:  Conscientious programmers are forced now to write their own GENSYM  lookalikes because they know the system's GENSYM has an invasive  effect. This defeats the primary intended function of GENSYM, which  is to satisfy the most common idiomatic use of MAKE-SYMBOL.  The stickiness of the GENSYM prefix was an attempt to be gratuitously  compatible with Maclisp, at the expense of good programming pratice.  Users who need the old behavior of GENSYM can trivially implement  that behavior using MAKE-SYMBOL.  Occasionally you want to reset the GENSYM counter so that, for example,  you can get the compiler to generate the same symbol names again  (good for comparing results to see what really changed).Test Case:  ;; #1: Test stickiness of name part.  (CHAR-EQUAL (CHAR (SYMBOL-NAME (SECOND (LIST (GENSYM "A") (GENSYM)))) 0)	      #\G)  => NIL ;under CLtL  => T   ;under this proposal  ;; #2: Test stickiness of number part.  (= (PARSE-INTEGER (PROGN (GENSYM 6789) (STRING (GENSYM "G"))) :START 1)     6790)  => T   ;under CLtL  => NIL ;under this proposal (except when *gensym-counter* happens to align)  ;; #3: Illustrate use of new variable.  (STRING= (SYMBOL-NAME (LET ((*GENSYM-COUNTER* 43)) (GENSYM "FOO")))           "FOO43")  => T   ;under this proposal (not meaningful previously)Current Practice:  Symbolics Cloe and Genera are compatible with CLtL, so this would be an  incompatible change.Cost to Implementors:  Very small.  If any implementations currently use a more compact representation for  the internal state of GENSYM than a variable holding a string and a  separate variable holding an integer, they might be forced to change.  Even then, the change would proabably still be quite small.Cost to Users:  Most uses of GENSYM do not depend on the stickiness of the name, so the  change would be compatible. In some cases, the change would be an  improvement. Even in the worst case where someone depends on stickiness,  it's extremely straightforward to write the couple of lines of code to  produce an application based on MAKE-SYMBOL that is at least as flexible  as GENSYM, and often moreso.Cost of Non-Adoption:  Good programmers would avoid using the argument to GENSYM (or using   GENSYM altogether) in many situations where they ought not have to.Benefits:  Gensyms which appear to convey information through their name would not  accidentally pop out and cause confusion in places where they oughtn't.  Making the gensym counter visible as a variable means that people will  be able to bind the gensym counter locally when they don't want to affect  the global counter.Aesthetics:  Unnecessary global state changes are hard to reason about. This would   be a small simplification.Discussion:  Pitman claims to have written a non-sticky GENSYM function for nearly  every one of the dozen or so large systems that he's written or worked  on in the last decade in order to get around the stated problem.  Others have suggested similar experience.  Pitman and Steele support LIKE-TEFLON.*start*01133 00024 US Date:  4 Apr 89 11:52 PDTSender: CL-Cleanup-mailer%SAIL.Stanford:EDU:XeroxFrom: KMP%STONY-BROOK.SCRC.Symbolics:COM:XeroxSubject: Issue: GENSYM-NAME-STICKINESSTo: CL-Cleanup%SAIL.Stanford:EDU:XeroxGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: GENSYM-NAME-STICKINESSTo: CL-Cleanup@SAIL.Stanford.EDUReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 04 APR 89 11:35:55 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM by SAIL.Stanford.EDU with TCP; 4 Apr 89  11:17:42 PDTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 571096; Tue 4-Apr-89 14:17:43 EDTOriginal-Date: Tue, 4 Apr 89 14:17 EDTMessage-ID: <890404141718.1.KMP@BOBOLINK.SCRC.Symbolics.COM>GVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVOption LIKE-TEFLON passed 17-0.There was general agreement that the issue name was an example of good marketingand helped the proposal slide right through.