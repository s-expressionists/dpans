*start*01596 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 13 NOV 88 15:36:00 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 13 Nov 88  15:34:07 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 491649; Sun 13-Nov-88 18:34:11 ESTDate: Sun, 13 Nov 88 18:33 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: FORMAT-ROUNDING (Version 1)To: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <881113183353.8.KMP@BOBOLINK.SCRC.Symbolics.COM>Kathy distributed this in hardcopy at the last X3J13 meeting.I'm agnostic on it for now, but wanted to get it into thearchives.  -kmp-----Issue:        FORMAT-ROUNDINGReferences:   FORMAT (p. 390)Category:     CHANGEEdit history: 5-OCT-88, Version 1 by ChapmanProblem Description:For the ~F FORMAT directive, the implementation can either round upor down when the rounding produces printed values equidistant fromthe scaled value of the argument.  Proposal (FORMAT-ROUNDING:SPECIFY)Specify that the implementation rounds up when the rounding producesprinted values equidistant fromthe scaled value of the argument.  Rationale:This change allows predictible results to occur when rounding occurs.Current Practice:Adoption Cost:Mininal.Benefits:This clarification will assist users in writing portable code.Conversion Cost:Minimal.Aesthetics:None.Discussion:*start*01780 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 13 NOV 88 20:26:17 PSTReceived: from lucid.com by SAIL.Stanford.EDU with TCP; 13 Nov 88  20:25:05 PSTReceived: from bhopal ([192.9.200.13]) by heavens-gate.lucid.com id AA05695g; Sun, 13 Nov 88 20:23:45 PSTReceived: by bhopal id AA20085g; Sun, 13 Nov 88 20:22:28 PSTDate: Sun, 13 Nov 88 20:22:28 PSTFrom: Jon L White <jonl@lucid.com>Message-Id: <8811140422.AA20085@bhopal>To: KMP@STONY-BROOK.SCRC.Symbolics.COMCc: CL-Cleanup@SAIL.Stanford.EDUIn-Reply-To: Kent M Pitman's message of Sun, 13 Nov 88 18:33 EST <881113183353.8.KMP@BOBOLINK.SCRC.Symbolics.COM>Subject: Issue: FORMAT-ROUNDING (Version 1)I strongly oppose this change.The choice to "Round Up" is counter to the choice for the ROUND functionon CLtL p.216, where "ties" are specified to round to the nearest eveninteger.  It is counter to the general direction that CL should followIEEE conventions wherever possible. [Note that having "ties" do "RoundUp" is a unique property of VAX hardware -- there isn't even any IEEErounding mode that corresponds to it.]According to CLtL, p390, the allegedly "unpredictable" results are in fact very predictable -- precisely one of two strings will be output, both of which are guaranteed to represent the number in question;and there is no other possibility.  Narrowing the choice down to just one of these two strings serves no useful purpose, and may even cause some (very minimal) implementational difficulties for some machines.But if we must choose between one of the two, I suggest we pick analgorithm that follows the IEEE style rather than the VAX style.-- JonL --*start*01177 00024 USaReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 14 NOV 88 12:13:43 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 14 Nov 88  12:12:31 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 492150; Mon 14-Nov-88 15:12:40 ESTDate: Mon, 14 Nov 88 15:12 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: FORMAT-ROUNDING (Version 1)To: CL-Cleanup@SAIL.Stanford.EDUIn-Reply-To: <881113183353.8.KMP@BOBOLINK.SCRC.Symbolics.COM>Message-ID: <19881114201233.8.MOON@EUPHRATES.SCRC.Symbolics.COM>I agree with JonL's comment that IEEE round-to-nearest, ratherthan round-towards-plus-infinity, should be used.  Of course IEEEdoesn't deal with decimal rounding, but the obvious analogy tobinary rounding should be employed.I doubt that it's appropriate to say anything about this in thestandard, though, since Common Lisp leaves all other aspects offloating-point rounding to the implementation's discretion.*start*00857 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 08 JAN 89 23:59:03 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 8 Jan 89  23:57:26 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 08 JAN 89 23:54:26 PSTDate: 8 Jan 89 23:53 PSTFrom: masinter.paSubject: Re: Issue: FORMAT-ROUNDING (Version 1)In-reply-to: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>'s message of Mon, 14 Nov 88 15:12 ESTTo: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>cc: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <890108-235426-3563@Xerox>My belief is that we've decided we don't like this issue as stated. Wouldit be appropriate to require that IEEE-FLOATING-POINT on *features* impliesthe round-to-nearest algorithm? *start*01226 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 09 JAN 89 21:42:32 PSTReceived: from lucid.com by SAIL.Stanford.EDU with TCP; 9 Jan 89  21:42:17 PSTReceived: from bhopal ([192.9.200.13]) by heavens-gate.lucid.com id AA01686g; Mon, 9 Jan 89 21:37:44 PSTReceived: by bhopal id AA12145g; Mon, 9 Jan 89 21:40:00 PSTDate: Mon, 9 Jan 89 21:40:00 PSTFrom: Jon L White <jonl@lucid.com>Message-Id: <8901100540.AA12145@bhopal>To: masinter.paCc: Moon@STONY-BROOK.SCRC.Symbolics.COM, CL-Cleanup@SAIL.Stanford.EDUIn-Reply-To: masinter.pa@Xerox.COM's message of 8 Jan 89 23:53 PST <890108-235426-3563@Xerox>Subject: Issue: FORMAT-ROUNDING (Version 1)re: My belief is that we've decided we don't like this issue as stated. Would    it be appropriate to require that IEEE-FLOATING-POINT on *features* implies    the round-to-nearest algorithm? "round-to-nearest" isn't sufficient; it should be "IEEE round-to-nearest",which has implications for "ties".However, both Moon and I seemed to prefer not trying to specify something in the standard for the case this issue is addressing.-- JonL --