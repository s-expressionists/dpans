*start*01439 00024 USaReturn-Path: <DLW@ALDERAAN.SCRC.Symbolics.COM>Received: from ALDERAAN.SCRC.Symbolics.COM ([192.10.41.109]) by Xerox.COM ; 26 MAY 87 11:42:01 PDTReceived: from CHICOPEE.SCRC.Symbolics.COM by ALDERAAN.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 85461; Tue 26-May-87 14:41:46 EDTDate: Tue, 26 May 87 14:40 EDTFrom: Daniel L. Weinreb <DLW@ALDERAAN.SCRC.Symbolics.COM>Subject: file-write-date for non-existant filesTo: kmp@ALDERAAN.SCRC.Symbolics.COM, Masinter.PAcc: dlw@ALDERAAN.SCRC.Symbolics.COM, moon@ALDERAAN.SCRC.Symbolics.COMMessage-ID: <870526144054.7.DLW@CHICOPEE.SCRC.Symbolics.COM>Line-fold: NoRecently I tried porting a CL program from the Prime to the Symbolicsimplementation.  I found that the program depended on the functionfile-write-date, when given a non-existant file, to return NIL ratherthan signalling an error.  CLtL, with its usual nonspecificity, saysthat file-write-date should return NIL if the write date "cannot bedetermined".  I feel this is not completely clear; does this mean "ifthe file system doesn't keep track of write dates for files", or does itmean "if anything goes wrong whatsoever, including 'the network is downright now' or 'attempts to compute this file write date happen tostimulate a bug in multiply'"?I was wondering if there are any pending cleanup proposals that bearon this question.  If not, I'd be interested in submitting one.  Thanks.*start*00954 00024 US Return-Path: <DLW@ALDERAAN.SCRC.Symbolics.COM>Received: from ALDERAAN.SCRC.Symbolics.COM ([192.10.41.109]) by Xerox.COM ; 03 JUN 87 08:22:54 PDTReceived: from CHICOPEE.SCRC.Symbolics.COM by ALDERAAN.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 88101; Wed 3-Jun-87 10:32:52 EDTDate: Wed, 3 Jun 87 10:27 EDTFrom: Daniel L. Weinreb <DLW@ALDERAAN.SCRC.Symbolics.COM>Subject: Re: file-write-date for non-existant filesTo: KMP@STONY-BROOK.SCRC.Symbolics.COMcc: Moon@STONY-BROOK.SCRC.Symbolics.COM, Masinter.PAIn-Reply-To: <870526223809.3.KMP@RIO-DE-JANEIRO.SCRC.Symbolics.COM>Message-ID: <870603102710.3.DLW@CHICOPEE.SCRC.Symbolics.COM>Line-fold: NoOK, it sounds like you're saying that there should not be a formalproposal for fixing the file-write-date ambiguity until we are at thepoint where we can make proposals that discuss signalling namedconditions.  That sounds reasonable.  Hope we get to that point soon.*start*02732 00024 USfReturn-Path: <@SAIL.STANFORD.EDU:RWK@YUKON.SCRC.Symbolics.COM>Redistributed: Xerox-Common-Lisp^.xReceived: from SAIL.STANFORD.EDU (SU-AI.ARPA) by Xerox.COM ; 15 DEC 86 05:23:00 PSTReceived: from SCRC-YUKON.ARPA by SAIL.STANFORD.EDU with TCP; 15 Dec 86  04:56:41 PSTReceived: from WHITE-BIRD.SCRC.Symbolics.COM by YUKON.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 134642; Mon 15-Dec-86 07:54:51 ESTDate: Mon, 15 Dec 86 07:54 ESTFrom: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>Subject: FILE-WRITE-DATE, FILE-AUTHORTo: common-lisp@SU-AI.ARPAcc: toto@YUKON.SCRC.Symbolics.COM, cal@THINK.COMMessage-ID: <861215075436.4.RWK@WHITE-BIRD.SCRC.Symbolics.COM>FILE-WRITE-DATE and FILE-AUTHOR are both vague on whathappens if the file does not exist.  The text says:    @I[file] can be a filename or a stream that is open to a file.    This returns the time at which the file was created or last    written as an integer in universal time format (see section 25.4.1),    or NIL if this cannot be determined.(FILE-AUTHOR is similar).My reading of this is that the phrase "if this cannot be determined"means "determined by looking at the file", not "determined for anyreason".  I think the intent here is to cover such situations asan operating system which doesn't support creation dates, or anetwork link which doesn't support inquiring about dates.Situations like giving the wrong pathname, temporary network failure,or no access rights should signal an error.PROBE-FILE and DIRECTORY are also a bit vague on these matters, sayingnothing about what happens when you can't inquire about files due tonetwork failure or no access rights.I also think that if the directory doesn't exist, you should get anerror, not just return NIL, but this would need to wait until we have anerror system, or the incompatibility would be too large.USER-HOMEDIR-PATHNAME says "if it is impossible to determine thisinformation, then NIL is returned instead of a pathname;".  It'snot clear whether this means "is impossible right now due to asystem error" or "is impossible to inquire of that host".  ReturningNIL due to a transient condition is both uninformative to the userand may lead to suprising behaviour, like reading in the wrong filesor refusing to do something.The :IF-DOES-NOT-EXIST NIL option to OPEN does not say what itdoes about things like network errors, etc.A lot of people seem to assume that if CLtL doesn't say anythingabout errors, then a function may not signal any errors, even ifsomething goes wrong.  Hopefully the new error system standard willaddress a lot of these issues, but some clarification (or at leastagreement on the intent) would help now.*start*02158 00024 US Return-Path: <@SAIL.STANFORD.EDU:masinter.pa@Xerox.COM>Redistributed: Xerox-Common-Lisp^.xReceived: from SAIL.STANFORD.EDU (SU-AI.ARPA) by Xerox.COM ; 15 DEC 86 14:34:40 PSTReceived: from XEROX.COM by SAIL.STANFORD.EDU with TCP; 15 Dec 86  13:54:12 PSTReceived: from Cabernet.ms by ArpaGateway.ms ; 15 DEC 86 13:52:51 PSTDate: 15 Dec 86 13:45 PSTFrom: masinter.paSubject: Re: FILE-WRITE-DATE, FILE-AUTHORIn-reply-to: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>'s message of Mon, 15 Dec 86 07:54 ESTTo: RWK@YUKON.SCRC.Symbolics.COMcc: common-lisp@SU-AI.ARPA, cal@THINK.COMMessage-ID: <861215-135251-3226@Xerox>The error system proposal (aka the Condition System proposal) does notat all address the issue of what functions might specify what errors, itonly provides a mechanism by which the type of error might be specified,and  for handling such conditions. This is my attempt to summarize the issue you brought up:"There are several operations in Common Lisp (e.g., PROBE-FILE,DIRECTORY, OPEN)  for which CLtL is vague about the behavior in the faceof lack of access rights, network failures, or transient conditions.The alternatives are to a) to declare that these conditions should be treated within the boundsof the specified operation, e.g., that PROBE-FILE return as if the filewere not present, USER-HOMEDIR-PATHNAME, FILE-WRITE-DATE, FILE-AUTHORreturn NILb) to declare explicitly that the behavior of a Common Lispimplementation in such conditions is "unspecified" or"implementation-dependent"c) to define conditions (e.g., INTERMITTENT-FILE-ERROR,INSUFFICIENT-ACCESS-RIGHTS) which will be signalled when such conditionsarise, and, perhaps, some of the actions that should happen surroundingsuch signals (e.g., that it should be possible to specify thatFILE-WRITE-DATE should just return NIL if it is not available, ect.)- - - - - - - - - - - -Independent of the merits of one proposal over another, are there anyother proposals or refinements of these? Other functions and situations(besides FILE-WRITE-DATE, FILE-AUTHOR, PROBE-FILE, DIRECTORY, OPEN,USER-HOMEDIR-PATHNAME)?*start*02655 00024 US Return-Path: <RWK@YUKON.SCRC.Symbolics.COM>Received: from YUKON.SCRC.Symbolics.COM (SCRC-YUKON.ARPA) by Xerox.COM ; 16 DEC 86 12:36:09 PSTReceived: from WHITE-BIRD.SCRC.Symbolics.COM by YUKON.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 135903; Tue 16-Dec-86 15:18:27 ESTDate: Tue, 16 Dec 86 15:17 ESTFrom: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>Subject: Re: FILE-WRITE-DATE, FILE-AUTHORTo: masinter.pacc: RWK@YUKON.SCRC.Symbolics.COM, common-lisp@SU-AI.ARPA, cal@THINK.COMIn-Reply-To: <861215-135251-3226@Xerox>Message-ID: <861216151753.3.RWK@WHITE-BIRD.SCRC.Symbolics.COM>A good summary.  I'd add another option:d)  Declare that they signal an error when they were actuallyunable to determine the existance of the file.  This is notquite as satisfactory as item 'c', but is a reasonable holdingaction until the error system proposal is adopted and attentionis given to standardizing on specific conditions and circumstances.    Date: 15 Dec 86 13:45 PST    From: masinter.pa@Xerox.COM    The error system proposal (aka the Condition System proposal) does not    at all address the issue of what functions might specify what errors, it    only provides a mechanism by which the type of error might be specified,    and  for handling such conditions.     This is my attempt to summarize the issue you brought up:    "There are several operations in Common Lisp (e.g., PROBE-FILE,    DIRECTORY, OPEN)  for which CLtL is vague about the behavior in the face    of lack of access rights, network failures, or transient conditions.    The alternatives are to     a) to declare that these conditions should be treated within the bounds    of the specified operation, e.g., that PROBE-FILE return as if the file    were not present, USER-HOMEDIR-PATHNAME, FILE-WRITE-DATE, FILE-AUTHOR    return NIL    b) to declare explicitly that the behavior of a Common Lisp    implementation in such conditions is "unspecified" or    "implementation-dependent"    c) to define conditions (e.g., INTERMITTENT-FILE-ERROR,    INSUFFICIENT-ACCESS-RIGHTS) which will be signalled when such conditions    arise, and, perhaps, some of the actions that should happen surrounding    such signals (e.g., that it should be possible to specify that    FILE-WRITE-DATE should just return NIL if it is not available, ect.)    - - - - - - - - - - - -    Independent of the merits of one proposal over another, are there any    other proposals or refinements of these? Other functions and situations    (besides FILE-WRITE-DATE, FILE-AUTHOR, PROBE-FILE, DIRECTORY, OPEN,    USER-HOMEDIR-PATHNAME)?*start*03220 00024 US Originator: @SAIL.STANFORD.EDU:RWK%YUKON.SCRC.Symbolics:COM:XeroxDate: 16 Dec 86 13:06From: RWK%YUKON.SCRC.Symbolics:COM:XeroxSubject: Re: FILE-WRITE-DATE, FILE-AUTHORIn-Reply-to: <861215-135251-3226@Xerox>To: masinter:PA:Xeroxcc: RWK%YUKON.SCRC.Symbolics:COM:Xerox, common-lisp%SU-AI:ARPA:Xerox, cal%THINK:COM:XeroxGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVFrom: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>Subject: Re: FILE-WRITE-DATE, FILE-AUTHORTo: masinter.pacc: RWK@YUKON.SCRC.Symbolics.COM, common-lisp@SU-AI.ARPA, cal@THINK.COMIn-Reply-To: <861215-135251-3226@Xerox>Return-Path: <@SAIL.STANFORD.EDU:RWK@YUKON.SCRC.Symbolics.COM>Redistributed: Xerox-Common-Lisp^.xReceived: from SAIL.STANFORD.EDU (SU-AI.ARPA) by Xerox.COM ; 16 DEC 86 13:06:17 PSTReceived: from SCRC-YUKON.ARPA by SAIL.STANFORD.EDU with TCP; 16 Dec 86  12:20:36 PSTReceived: from WHITE-BIRD.SCRC.Symbolics.COM by YUKON.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 135903; Tue 16-Dec-86 15:18:27 ESTOriginal-Date: Tue, 16 Dec 86 15:17 ESTMessage-ID: <861216151753.3.RWK@WHITE-BIRD.SCRC.Symbolics.COM>GVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVA good summary.  I'd add another option:d)  Declare that they signal an error when they were actuallyunable to determine the existance of the file.  This is notquite as satisfactory as item 'c', but is a reasonable holdingaction until the error system proposal is adopted and attentionis given to standardizing on specific conditions and circumstances.    Date: 15 Dec 86 13:45 PST    From: masinter.pa@Xerox.COM    The error system proposal (aka the Condition System proposal) does not    at all address the issue of what functions might specify what errors, it    only provides a mechanism by which the type of error might be specified,    and  for handling such conditions.     This is my attempt to summarize the issue you brought up:    "There are several operations in Common Lisp (e.g., PROBE-FILE,    DIRECTORY, OPEN)  for which CLtL is vague about the behavior in the face    of lack of access rights, network failures, or transient conditions.    The alternatives are to     a) to declare that these conditions should be treated within the bounds    of the specified operation, e.g., that PROBE-FILE return as if the file    were not present, USER-HOMEDIR-PATHNAME, FILE-WRITE-DATE, FILE-AUTHOR    return NIL    b) to declare explicitly that the behavior of a Common Lisp    implementation in such conditions is "unspecified" or    "implementation-dependent"    c) to define conditions (e.g., INTERMITTENT-FILE-ERROR,    INSUFFICIENT-ACCESS-RIGHTS) which will be signalled when such conditions    arise, and, perhaps, some of the actions that should happen surrounding    such signals (e.g., that it should be possible to specify that    FILE-WRITE-DATE should just return NIL if it is not available, ect.)    - - - - - - - - - - - -    Independent of the merits of one proposal over another, are there any    other proposals or refinements of these? Other functions and situations    (besides FILE-WRITE-DATE, FILE-AUTHOR, PROBE-FILE, DIRECTORY, OPEN,    USER-HOMEDIR-PATHNAME)?*start*02019 00024 USaReturn-Path: <@SAIL.STANFORD.EDU:ELIOT%cs.umass.edu@RELAY.CS.NET>Redistributed: Xerox-Common-Lisp^.xReceived: from SAIL.STANFORD.EDU (SU-AI.ARPA) by Xerox.COM ; 18 DEC 86 15:44:43 PSTReceived: from RELAY.CS.NET by SAIL.STANFORD.EDU with TCP; 18 Dec 86  15:13:05 PSTReceived: from cs.umass.edu by csnet-relay.csnet id ao02299; 18 Dec 86 17:29 ESTDate: Thu, 18 Dec 86 12:03 EDTFrom: ELIOT%cs.umass.edu@RELAY.CS.NETTo: Common-Lisp@SU-AI.ARPASubject:  File OperationsX-VMS-To: CSNET%"Common-Lisp@su-ai.arpa"File Operation errors are somewhat of a special case, in thata "correct" program may attempt an uncompletable file operation.Some of the operations in question are exactly the operations whichmust be performed in order to determine if the operations can be done.(E.g. Probe-file.)Because of this I think that special handling of errors is called for.I would suggest that keyword arguments be added to these functionswhich control this behavior.  I would propose two new arguments,:on-error and :on-failure.  Failure is defined as a reasonable operationthat couldn't be done because of some condition in the outside world,such as a network being down.  Errors are operations that don't seemto make sense, such as deleting a file that does not exist, orsupplying a host name that is unknown.  The values to the keywordarguments would be :error arguments would be :ERROR or a value to return.  (With :ERROR beingthe default.)  A value of :ERROR would indicate that an error shouldbe signalled.This is obviously redundant with handling these situations in the errorsystem.  However, we won't have an error system generally implementedfor quite some time.  Even then this crude would be useful in simplersituations, and I think it would be easier to read:	(probe-file foo :on-failure nil)Than:	(condition-bind	  (si:file-operation-failure nil)	  (probe-file foo))Since file operation errors are so pervasive the redundant functionalitywould be worth it.*start*03212 00024 USfDate: 23 Sep 88 02:22 PDTFrom: masinter.paSubject: Issue: FILE-WRITE-DATE-IF-NOT-EXISTSTo: KMP@STONY-BROOK.SCRC.Symbolics.COMcc: MasinterI had this (and others) message filed under that issue name. The disposition was "wait until there is an signal proposal." Now that there is a signal proposal, I am pretty sure that it doesn't address this issue. Should we handle this with "cleanup"?     ----- Begin Forwarded Messages -----Return-Path: <@SAIL.STANFORD.EDU:RWK@YUKON.SCRC.Symbolics.COM>Redistributed: Xerox-Common-Lisp^.xReceived: from SAIL.STANFORD.EDU (SU-AI.ARPA) by Xerox.COM ; 15 DEC 86 05:23:00 PSTReceived: from SCRC-YUKON.ARPA by SAIL.STANFORD.EDU with TCP; 15 Dec 86  04:56:41 PSTReceived: from WHITE-BIRD.SCRC.Symbolics.COM by YUKON.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 134642; Mon 15-Dec-86 07:54:51 ESTDate: Mon, 15 Dec 86 07:54 ESTFrom: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>Subject: FILE-WRITE-DATE, FILE-AUTHORTo: common-lisp@SU-AI.ARPAcc: toto@YUKON.SCRC.Symbolics.COM, cal@THINK.COMMessage-ID: <861215075436.4.RWK@WHITE-BIRD.SCRC.Symbolics.COM>FILE-WRITE-DATE and FILE-AUTHOR are both vague on whathappens if the file does not exist.  The text says:    @I[file] can be a filename or a stream that is open to a file.    This returns the time at which the file was created or last    written as an integer in universal time format (see section 25.4.1),    or NIL if this cannot be determined.(FILE-AUTHOR is similar).My reading of this is that the phrase "if this cannot be determined"means "determined by looking at the file", not "determined for anyreason".  I think the intent here is to cover such situations asan operating system which doesn't support creation dates, or anetwork link which doesn't support inquiring about dates.Situations like giving the wrong pathname, temporary network failure,or no access rights should signal an error.PROBE-FILE and DIRECTORY are also a bit vague on these matters, sayingnothing about what happens when you can't inquire about files due tonetwork failure or no access rights.I also think that if the directory doesn't exist, you should get anerror, not just return NIL, but this would need to wait until we have anerror system, or the incompatibility would be too large.USER-HOMEDIR-PATHNAME says "if it is impossible to determine thisinformation, then NIL is returned instead of a pathname;".  It'snot clear whether this means "is impossible right now due to asystem error" or "is impossible to inquire of that host".  ReturningNIL due to a transient condition is both uninformative to the userand may lead to suprising behaviour, like reading in the wrong filesor refusing to do something.The :IF-DOES-NOT-EXIST NIL option to OPEN does not say what itdoes about things like network errors, etc.A lot of people seem to assume that if CLtL doesn't say anythingabout errors, then a function may not signal any errors, even ifsomething goes wrong.  Hopefully the new error system standard willaddress a lot of these issues, but some clarification (or at leastagreement on the intent) would help now.     ----- End Forwarded Messages -----*start*00912 00024 USaReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 13 OCT 88 13:55:04 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 13 Oct 88  13:54:54 PDTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 475856; Thu 13-Oct-88 16:53:32 EDTDate: Thu, 13 Oct 88 16:53 EDTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: FILE-WRITE-DATE-IF-NOT-EXISTS (no proposal)To: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <881013165324.0.KMP@BOBOLINK.SCRC.Symbolics.COM>My notes from Fairfax meeting...Cleanup meeting: This should be handled under the auspices of a separate "error signalling committee".X3J13 meeting: No attempt was made to form such a committee.*start*04328 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 31 OCT 88 18:46:31 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 31 Oct 88  18:43:48 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 31 OCT 88 14:43:10 PSTDate: 31 Oct 88 14:43 PSTFrom: masinter.paSubject: Issue: FILE-WRITE-DATE-IF-NOT-EXISTS (no writeup)To: cl-cleanup@sail.stanford.eduMessage-ID: <881031-144310-6392@Xerox>I had this (and others) message filed under that issue name. Thedisposition was "wait until there is an signal proposal." Now that there isa signal proposal, I am pretty sure that it doesn't address this issue. I'd like a volunteer to write this up as an issue. (Is DLW a candidate?)There is additional discussion on this topic, that I will forward.      ----- Begin Forwarded Messages -----Date: Mon, 15 Dec 86 07:54 ESTFrom: Robert W. Kerns <RWK@YUKON.SCRC.Symbolics.COM>Subject: FILE-WRITE-DATE, FILE-AUTHORTo: common-lisp@SU-AI.ARPAcc: toto@YUKON.SCRC.Symbolics.COM, cal@THINK.COMMessage-ID: <861215075436.4.RWK@WHITE-BIRD.SCRC.Symbolics.COM>FILE-WRITE-DATE and FILE-AUTHOR are both vague on whathappens if the file does not exist.  The text says:    @I[file] can be a filename or a stream that is open to a file.    This returns the time at which the file was created or last    written as an integer in universal time format (see section 25.4.1),    or NIL if this cannot be determined.(FILE-AUTHOR is similar).My reading of this is that the phrase "if this cannot be determined"means "determined by looking at the file", not "determined for anyreason".  I think the intent here is to cover such situations asan operating system which doesn't support creation dates, or anetwork link which doesn't support inquiring about dates.Situations like giving the wrong pathname, temporary network failure,or no access rights should signal an error.PROBE-FILE and DIRECTORY are also a bit vague on these matters, sayingnothing about what happens when you can't inquire about files due tonetwork failure or no access rights.I also think that if the directory doesn't exist, you should get anerror, not just return NIL, but this would need to wait until we have anerror system, or the incompatibility would be too large.USER-HOMEDIR-PATHNAME says "if it is impossible to determine thisinformation, then NIL is returned instead of a pathname;".  It'snot clear whether this means "is impossible right now due to asystem error" or "is impossible to inquire of that host".  ReturningNIL due to a transient condition is both uninformative to the userand may lead to suprising behaviour, like reading in the wrong filesor refusing to do something.The :IF-DOES-NOT-EXIST NIL option to OPEN does not say what itdoes about things like network errors, etc.A lot of people seem to assume that if CLtL doesn't say anythingabout errors, then a function may not signal any errors, even ifsomething goes wrong.  Hopefully the new error system standard willaddress a lot of these issues, but some clarification (or at leastagreement on the intent) would help now.     ----- End Forwarded Messages -----Date: Tue, 26 May 87 14:40 EDTFrom: Daniel L. Weinreb <DLW@ALDERAAN.SCRC.Symbolics.COM>Subject: file-write-date for non-existant filesTo: kmp@ALDERAAN.SCRC.Symbolics.COM, Masinter.PAcc: dlw@ALDERAAN.SCRC.Symbolics.COM, moon@ALDERAAN.SCRC.Symbolics.COMRecently I tried porting a CL program from the Prime to the Symbolicsimplementation.  I found that the program depended on the functionfile-write-date, when given a non-existant file, to return NIL ratherthan signalling an error.  CLtL, with its usual nonspecificity, saysthat file-write-date should return NIL if the write date "cannot bedetermined".  I feel this is not completely clear; does this mean "ifthe file system doesn't keep track of write dates for files", or does itmean "if anything goes wrong whatsoever, including 'the network is downright now' or 'attempts to compute this file write date happen tostimulate a bug in multiply'"?I was wondering if there are any pending cleanup proposals that bearon this question.  If not, I'd be interested in submitting one.  Thanks.*start*00798 00024 US Return-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 31 OCT 88 18:46:46 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 31 Oct 88  18:44:19 PSTReceived: from Semillon.ms by ArpaGateway.ms ; 31 OCT 88 14:59:52 PSTDate: 31 Oct 88 14:59 PSTFrom: masinter.paSubject: Re: Issue: FILE-WRITE-DATE-IF-NOT-EXISTS (no proposal)In-reply-to: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>'s message of Thu, 13 Oct 88 16:53 EDTTo: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>cc: CL-Cleanup@SAIL.Stanford.EDUMessage-ID: <881031-145952-6430@Xerox>Sorry, I misfiled this response. I guess this might yet be handled by acleanup, if only to set a precedent.