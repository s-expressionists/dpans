*start*02221 00024 USfReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 07 MAR 89 16:43:19 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 7 Mar 89  16:43:45 PSTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 552576; Tue 7-Mar-89 19:41:27 ESTDate: Tue, 7 Mar 89 19:41 ESTFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: BREAK-ON-WARNINGS-OBSOLETETo: CL-Cleanup@SAIL.Stanford.EDUcc: chapman%aitg.dec@decwrl.dec.comMessage-ID: <890307194121.9.KMP@BOBOLINK.SCRC.Symbolics.COM>This issue came up in my review of the errors chapter for Kathy. -kmp-----Issue:        BREAK-ON-WARNINGS-OBSOLETEForum:	      CleanupReferences:   *BREAK-ON-WARNINGS* (CLtL p432, CL Condition System p40)	      *BREAK-ON-SIGNALS* (CL Condition System p25)Category:     CLARIFICATION/CHANGEEdit history: 07-Mar-89, Version 1 by PitmanStatus:	      For Internal DiscussionProblem Description:  With the advent of *BREAK-ON-SIGNALS*, *BREAK-ON-WARNINGS* is  redundant and unnecessary.Proposal (BREAK-ON-WARNINGS-OBSOLETE:DEPRECATE):  Deprecate *BREAK-ON-WARNINGS*.Test Case:  N/ARationale:  This will lead to simplification of the description of WARN.  Not only are the two variables overkill, but they have an effect  in an identifiably but uselessly distinct place.Current Practice:  Since deprecation is not removal, presumably everyone who conforms  is compatible.Cost to Implementors:  Since the feature is deprecated rather than flushed: none.Cost to Users:  Since the feature is deprecated rather than flushed: none.  Users should get used to writing (SETQ *BREAK-ON-SIGNALS* 'WARNING)  rather than (SETQ *BREAK-ON-WARNINGS* T).Cost of Non-Adoption:  The definition of WARN will be gratuitously cluttered.Benefits:  Cost of non-adoption is avoided.Aesthetics:  Slight improvement.Discussion:  Pitman thinks this is a good idea, but doesn't think a lot of time  should be wasted discussing the issue if there is strong opposition.*start*01981 00024 US GV-Info: X3J13-mailer@SAIL.Stanford.EDU at 15-Mar-89 18:17:49 from AGReturn-Path: <X3J13-mailer@SAIL.Stanford.EDU>Received: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 15 MAR 89 18:16:03 PSTReceived: from Xerox.COM by SAIL.Stanford.EDU with TCP; 15 Mar 89  17:56:25 PSTReceived: from Cabernet.ms by ArpaGateway.ms ; 15 MAR 89 17:17:14 PSTDate: 15 Mar 89 17:16 PSTFrom: masinter.paSubject: Issue: BREAK-ON-WARNINGS-OBSOLETE (Version 1)To: x3J13@sail.stanford.eduline-fold: NOreply-to: CL-CLEANUP@Sail.stanford.eduMessage-ID: <890315-171714-1269@Xerox>!Issue:        BREAK-ON-WARNINGS-OBSOLETEForum:	      CleanupReferences:   *BREAK-ON-WARNINGS* (CLtL p432, CL Condition System p40)	      *BREAK-ON-SIGNALS* (CL Condition System p25)Category:     CLARIFICATION/CHANGEEdit history: 07-Mar-89, Version 1 by PitmanProblem Description:  With the advent of *BREAK-ON-SIGNALS*, *BREAK-ON-WARNINGS* is  redundant and unnecessary.Proposal (BREAK-ON-WARNINGS-OBSOLETE:DEPRECATE):  Deprecate *BREAK-ON-WARNINGS*.Test Case:  N/ARationale:  This will lead to simplification of the description of WARN.  Not only are the two variables overkill, but they have an effect  in an identifiably but uselessly distinct place.Current Practice:  Since deprecation is not removal, presumably everyone who conforms  is compatible.Cost to Implementors:  Since the feature is deprecated rather than flushed: none.Cost to Users:  Since the feature is deprecated rather than flushed: none.  Users should get used to writing (SETQ *BREAK-ON-SIGNALS* 'WARNING)  rather than (SETQ *BREAK-ON-WARNINGS* T).Cost of Non-Adoption:  The definition of WARN will be gratuitously cluttered.Benefits:  Cost of non-adoption is avoided.Aesthetics:  Slight improvement.Discussion:  Pitman thinks this is a good idea, but doesn't think a lot of time  should be wasted discussing the issue if there is strong opposition.*start*01757 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 16-Mar-89 08:07:31 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 08:06:09 PSTReceived: from multimax.encore.com by SAIL.Stanford.EDU with TCP; 16 Mar 89  08:06:57 PSTReceived: from mist.encore.COM by multimax.encore.com with SMTP (5.61/25-eef)	id AA02088; Thu, 16 Mar 89 11:04:37 -0500Received: from localhost by mist. (4.0/SMI-4.0)	id AA07042; Thu, 16 Mar 89 10:41:17 ESTMessage-Id: <8903161541.AA07042@mist.>To: CL-CLEANUP@Sail.stanford.eduSubject: Re: Issue: BREAK-ON-WARNINGS-OBSOLETE (Version 1) In-Reply-To: Your message of 15 Mar 89 17:16:00 -0800.             <890315-171714-1269@Xerox> Date: Thu, 16 Mar 89 10:41:15 ESTFrom: Dan L. Pierson <pierson@mist.encore.com>Sorry for the late reply on this.The only problem with this proposal is that *BREAK-ON-SIGNALS* seemsto implicitly depend on either:    1. Having all condition types you want to control in one inheritance       tree.    2. Or SUBTYPEP supporting MEMBER type specifiers.For example, suppose you create a new subtype of CONDITION, disjointfrom WARNING, called FROB, that does not break by default.  Nowsuppose you want to break on both WARNING and FROB, but not on anotherdisjoint subtype of CONDITION, say BLAT.  The only way I can see to dothis would be:    (SETQ *BREAK-ON-SIGNALS* '(MEMBER WARNING FROB))But this would presumably fail to work in an implementation thatcompilied minimally with SUBTYPEP-TOO-VAGUE.Of course, *BREAK-ON-WARNINGS* doesn't solve this problem, it justdodges the one occurance of it that involves standard condition types.*start*01963 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 16-Mar-89 08:26:16 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 08:26:09 PSTReceived: from multimax.encore.com by SAIL.Stanford.EDU with TCP; 16 Mar 89  08:26:55 PSTReceived: from mist.encore.COM by multimax.encore.com with SMTP (5.61/25-eef)	id AA02401; Thu, 16 Mar 89 11:24:37 -0500Received: from localhost by mist. (4.0/SMI-4.0)	id AA07142; Thu, 16 Mar 89 11:22:55 ESTMessage-Id: <8903161622.AA07142@mist.>Cc: CL-CLEANUP@Sail.stanford.eduSubject: Re: Issue: BREAK-ON-WARNINGS-OBSOLETE (Version 1) In-Reply-To: Your message of Thu, 16 Mar 89 10:41:15 -0500.             <8903161541.AA07042@mist.> Date: Thu, 16 Mar 89 11:22:50 ESTFrom: Dan L. Pierson <pierson@mist.encore.com>Oops, braino.  The previous version of this message used MEMBER when Imeant OR.  Here is a corrected version:    Sorry for the late reply on this.        The only problem with this proposal is that *BREAK-ON-SIGNALS* seems    to implicitly depend on either:            1. Having all condition types you want to control in one inheritance           tree, or            2. SUBTYPEP supporting OR type specifiers.        For example, suppose you create a new subtype of CONDITION, disjoint    from WARNING, called FROB, that does not break by default.  Now    suppose you want to break on both WARNING and FROB, but not on another    disjoint subtype of CONDITION, say BLAT.  The only way I can see to do    this would be:            (SETQ *BREAK-ON-SIGNALS* '(OR WARNING FROB))        But this would presumably fail to work in an implementation that    compilied minimally with SUBTYPEP-TOO-VAGUE.        Of course, *BREAK-ON-WARNINGS* doesn't solve this problem, it just    dodges the one occurance of it that involves standard condition types.    *start*02289 00024 US GV-Info: CL-Cleanup-mailer@SAIL.Stanford.EDU at 16-Mar-89 12:33:18 from AGReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 16 MAR 89 12:33:21 PSTReceived: from STONY-BROOK.SCRC.Symbolics.COM (SCRC-STONY-BROOK.ARPA) by SAIL.Stanford.EDU with TCP; 16 Mar 89  12:34:03 PSTReceived: from EUPHRATES.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 558776; Thu 16-Mar-89 15:30:56 ESTDate: Thu, 16 Mar 89 15:30 ESTFrom: David A. Moon <Moon@STONY-BROOK.SCRC.Symbolics.COM>Subject: Re: Issue: BREAK-ON-WARNINGS-OBSOLETE (Version 1) To: Dan L. Pierson <pierson@mist.encore.com>cc: CL-CLEANUP@Sail.stanford.eduIn-Reply-To: <8903161622.AA07142@mist.>Message-ID: <19890316203057.4.MOON@EUPHRATES.SCRC.Symbolics.COM>    Date: Thu, 16 Mar 89 11:22:50 EST    From: Dan L. Pierson <pierson@mist.encore.com>    Oops, braino.  The previous version of this message used MEMBER when I    meant OR.  Here is a corrected version:	Sorry for the late reply on this.    	The only problem with this proposal is that *BREAK-ON-SIGNALS* seems	to implicitly depend on either:    	    1. Having all condition types you want to control in one inheritance	       tree, or    	    2. SUBTYPEP supporting OR type specifiers.    	For example, suppose you create a new subtype of CONDITION, disjoint	from WARNING, called FROB, that does not break by default.  Now	suppose you want to break on both WARNING and FROB, but not on another	disjoint subtype of CONDITION, say BLAT.  The only way I can see to do	this would be:    	    (SETQ *BREAK-ON-SIGNALS* '(OR WARNING FROB))    	But this would presumably fail to work in an implementation that	compilied minimally with SUBTYPEP-TOO-VAGUE.    I don't believe this is a real problem, because the signaller has acondition object in its hand, so it would be calling TYPEP, not SUBTYPEP.TYPEP has no problems working with OR.In fact SUBTYPEP has no problems working with OR as the second argument,so you have also pointed out a bug in SUBTYPEP-TOO-VAGUE; it should notallow SUBTYPEP to fail when just the second argument involves OR.  I thinkthis has been pointed out before.*start*01080 00024 US Date:  4 Apr 89 08:07 PDTSender: CL-Cleanup-mailer%SAIL.Stanford:EDU:XeroxFrom: KMP%STONY-BROOK.SCRC.Symbolics:COM:XeroxSubject: Issue: BREAK-ON-WARNINGS-OBSOLETETo: CL-Cleanup%SAIL.Stanford:EDU:XeroxGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVFrom: Kent M Pitman <KMP@STONY-BROOK.SCRC.Symbolics.COM>Subject: Issue: BREAK-ON-WARNINGS-OBSOLETETo: CL-Cleanup@SAIL.Stanford.EDUReturn-Path: <CL-Cleanup-mailer@SAIL.Stanford.EDU>Redistributed: xerox-cl-cleanup^.paReceived: from SAIL.Stanford.EDU ([36.86.0.194]) by Xerox.COM ; 04 APR 89 08:07:44 PDTReceived: from STONY-BROOK.SCRC.Symbolics.COM by SAIL.Stanford.EDU with TCP; 4 Apr 89  08:05:10 PDTReceived: from BOBOLINK.SCRC.Symbolics.COM by STONY-BROOK.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 570860; Tue 4-Apr-89 11:05:11 EDTOriginal-Date: Tue, 4 Apr 89 11:04 EDTMessage-ID: <890404110447.0.KMP@BOBOLINK.SCRC.Symbolics.COM>GVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVGVMy notes say this passed unanimously with friendly amendment to"remove" rather than "deprecate".